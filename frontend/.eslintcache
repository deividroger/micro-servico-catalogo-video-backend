[{"/var/www/frontend/src/index.tsx":"1","/var/www/frontend/src/reportWebVitals.ts":"2","/var/www/frontend/src/App.tsx":"3","/var/www/frontend/src/components/Navbar/index.tsx":"4","/code-micro-videos/frontend/src/index.tsx":"5","/code-micro-videos/frontend/src/reportWebVitals.ts":"6","/code-micro-videos/frontend/src/App.tsx":"7","/code-micro-videos/frontend/src/components/Navbar/index.tsx":"8","/code-micro-videos/frontend/src/components/Navbar/Menu.tsx":"9","/code-micro-videos/frontend/src/components/Page.tsx":"10","/code-micro-videos/frontend/src/routes/AppRouter.tsx":"11","/code-micro-videos/frontend/src/routes/index.tsx":"12","/code-micro-videos/frontend/src/pages/Dashboard.tsx":"13","/code-micro-videos/frontend/src/components/Breadcrumbs.tsx":"14","/code-micro-videos/frontend/src/pages/category/PageList.tsx":"15","/code-micro-videos/frontend/src/pages/category/Table.tsx":"16","/code-micro-videos/frontend/src/util/http/index.ts":"17","/code-micro-videos/frontend/src/pages/cast-member/PageList.tsx":"18","/code-micro-videos/frontend/src/pages/cast-member/Table.tsx":"19","/code-micro-videos/frontend/src/pages/genre/PageList.tsx":"20","/code-micro-videos/frontend/src/pages/genre/Table.tsx":"21","/code-micro-videos/frontend/src/util/http/category-http.ts":"22","/code-micro-videos/frontend/src/util/http/http-resource.ts":"23","/code-micro-videos/frontend/src/pages/category/PageForm.tsx":"24","/code-micro-videos/frontend/src/pages/category/Form.tsx":"25","/code-micro-videos/frontend/src/pages/cast-member/PageForm.tsx":"26","/code-micro-videos/frontend/src/pages/cast-member/Form.tsx":"27","/code-micro-videos/frontend/src/util/http/cast-member-http.ts":"28","/code-micro-videos/frontend/src/routes/categoryRoutes.tsx":"29","/code-micro-videos/frontend/src/routes/genresRoutes.tsx":"30","/code-micro-videos/frontend/src/routes/castMembersRoutes.tsx":"31","/code-micro-videos/frontend/src/routes/dashboardRoutes.tsx":"32","/code-micro-videos/frontend/src/pages/genre/PageForm.tsx":"33","/code-micro-videos/frontend/src/pages/genre/Form.tsx":"34","/code-micro-videos/frontend/src/util/http/genre-http.ts":"35","/code-micro-videos/frontend/src/theme.ts":"36","/code-micro-videos/frontend/src/components/Badge.tsx":"37","/code-micro-videos/frontend/src/util/vendor/yup.ts":"38","/code-micro-videos/frontend/src/components/SnackbarProvider.tsx":"39","/code-micro-videos/frontend/src/util/models.ts":"40","/code-micro-videos/frontend/src/components/SubmmitActions.tsx":"41","/code-micro-videos/frontend/src/components/DefaultForm.tsx":"42","/code-micro-videos/frontend/src/components/Table/index.tsx":"43","/code-micro-videos/frontend/src/components/Table/FilterResetButton.tsx":"44","/code-micro-videos/frontend/src/components/Table/DebouncedTableSearch.js":"45","/code-micro-videos/frontend/src/store/filter/index.ts":"46","/code-micro-videos/frontend/src/hooks/useFilter.ts":"47"},{"size":500,"mtime":1611865961266,"results":"48","hashOfConfig":"49"},{"size":425,"mtime":1611865961266,"results":"50","hashOfConfig":"49"},{"size":258,"mtime":1611889797040,"results":"51","hashOfConfig":"49"},{"size":245,"mtime":1611889895724,"results":"52","hashOfConfig":"49"},{"size":500,"mtime":1611865961266,"results":"53","hashOfConfig":"54"},{"size":425,"mtime":1611865961266,"results":"55","hashOfConfig":"54"},{"size":835,"mtime":1618081186416,"results":"56","hashOfConfig":"54"},{"size":941,"mtime":1611971943655,"results":"57","hashOfConfig":"54"},{"size":2269,"mtime":1614888760297,"results":"58","hashOfConfig":"54"},{"size":616,"mtime":1612319500111,"results":"59","hashOfConfig":"54"},{"size":614,"mtime":1612026293655,"results":"60","hashOfConfig":"54"},{"size":519,"mtime":1613523274354,"results":"61","hashOfConfig":"54"},{"size":282,"mtime":1612023918713,"results":"62","hashOfConfig":"54"},{"size":2461,"mtime":1614898469175,"results":"63","hashOfConfig":"54"},{"size":739,"mtime":1614890359578,"results":"64","hashOfConfig":"54"},{"size":6062,"mtime":1625601528105,"results":"65","hashOfConfig":"54"},{"size":127,"mtime":1625598635481,"results":"66","hashOfConfig":"54"},{"size":745,"mtime":1614890370970,"results":"67","hashOfConfig":"54"},{"size":8337,"mtime":1625601820538,"results":"68","hashOfConfig":"54"},{"size":728,"mtime":1614890341345,"results":"69","hashOfConfig":"54"},{"size":9457,"mtime":1625602232122,"results":"70","hashOfConfig":"54"},{"size":173,"mtime":1625598564999,"results":"71","hashOfConfig":"54"},{"size":1356,"mtime":1625598622553,"results":"72","hashOfConfig":"54"},{"size":367,"mtime":1617422438367,"results":"73","hashOfConfig":"54"},{"size":4637,"mtime":1618370078406,"results":"74","hashOfConfig":"54"},{"size":263,"mtime":1613521279483,"results":"75","hashOfConfig":"54"},{"size":4685,"mtime":1618370259849,"results":"76","hashOfConfig":"54"},{"size":179,"mtime":1625598550855,"results":"77","hashOfConfig":"54"},{"size":706,"mtime":1617418804994,"results":"78","hashOfConfig":"54"},{"size":641,"mtime":1618081782531,"results":"79","hashOfConfig":"54"},{"size":755,"mtime":1618081698996,"results":"80","hashOfConfig":"54"},{"size":217,"mtime":1613523159029,"results":"81","hashOfConfig":"54"},{"size":254,"mtime":1618089339600,"results":"82","hashOfConfig":"54"},{"size":5516,"mtime":1621568579259,"results":"83","hashOfConfig":"54"},{"size":163,"mtime":1625598579503,"results":"84","hashOfConfig":"54"},{"size":3463,"mtime":1625599279249,"results":"85","hashOfConfig":"54"},{"size":637,"mtime":1614898053376,"results":"86","hashOfConfig":"54"},{"size":336,"mtime":1625599302115,"results":"87","hashOfConfig":"54"},{"size":1495,"mtime":1625599904904,"results":"88","hashOfConfig":"54"},{"size":973,"mtime":1625598525582,"results":"89","hashOfConfig":"54"},{"size":1037,"mtime":1618349567645,"results":"90","hashOfConfig":"54"},{"size":875,"mtime":1618370285382,"results":"91","hashOfConfig":"54"},{"size":4374,"mtime":1625598312447,"results":"92","hashOfConfig":"54"},{"size":672,"mtime":1625598827387,"results":"93","hashOfConfig":"54"},{"size":3680,"mtime":1625599956994,"results":"94","hashOfConfig":"54"},{"size":3013,"mtime":1625598471280,"results":"95","hashOfConfig":"54"},{"size":8434,"mtime":1625603845288,"results":"96","hashOfConfig":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"1dpw0hl",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1qzgm0n",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/var/www/frontend/src/index.tsx",[],["199","200"],"/var/www/frontend/src/reportWebVitals.ts",[],"/var/www/frontend/src/App.tsx",[],"/var/www/frontend/src/components/Navbar/index.tsx",[],"/code-micro-videos/frontend/src/index.tsx",[],["201","202"],"/code-micro-videos/frontend/src/reportWebVitals.ts",[],"/code-micro-videos/frontend/src/App.tsx",[],"/code-micro-videos/frontend/src/components/Navbar/index.tsx",[],"/code-micro-videos/frontend/src/components/Navbar/Menu.tsx",[],"/code-micro-videos/frontend/src/components/Page.tsx",[],"/code-micro-videos/frontend/src/routes/AppRouter.tsx",[],"/code-micro-videos/frontend/src/routes/index.tsx",[],"/code-micro-videos/frontend/src/pages/Dashboard.tsx",[],"/code-micro-videos/frontend/src/components/Breadcrumbs.tsx",[],"/code-micro-videos/frontend/src/pages/category/PageList.tsx",[],"/code-micro-videos/frontend/src/pages/category/Table.tsx",["203","204","205","206","207","208","209","210"],"/code-micro-videos/frontend/src/util/http/index.ts",[],"/code-micro-videos/frontend/src/pages/cast-member/PageList.tsx",[],"/code-micro-videos/frontend/src/pages/cast-member/Table.tsx",["211","212","213","214"],"import * as React from 'react';\nimport {useEffect, useState} from \"react\";\nimport format from \"date-fns/format\";\nimport parseISO from \"date-fns/parseISO\";\nimport castMemberHttp from \"../../util/http/cast-member-http\";\nimport {CastMember, CastMemberTypeMap, ListResponse} from \"../../util/models\";\nimport {IconButton, MuiThemeProvider} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DefaultTable, {makeActionStyles, TableColumn, MuiDataTableRefComponent} from '../../components/Table';\nimport {useSnackbar} from \"notistack\";\nimport {useRef} from \"react\";\nimport useFilter from \"../../hooks/useFilter\";\nimport {FilterResetButton} from \"../../components/Table/FilterResetButton\";\nimport * as yup from '../../util/vendor/yup';\nimport {invert} from 'lodash';\n\nconst castMemberNames = Object.values(CastMemberTypeMap);\n\nconst columnsDefinition: TableColumn[] = [\n    {\n        name: 'id',\n        label: 'ID',\n        width: '30%',\n        options: {\n            sort: false,\n            filter: false\n        }\n    },\n    {\n        name: \"name\",\n        label: \"Nome\",\n        width: \"43%\",\n        options: {\n            filter: false\n        }\n    },\n    {\n        name: \"type\",\n        label: \"Tipo\",\n        width: '4%',\n        options: {\n            filterOptions: {\n                names: castMemberNames\n            },\n            customBodyRender: (value, tableMeta, updateValue) => { \n                return CastMemberTypeMap[value];\n            },\n        }\n    },\n    {\n        name: \"created_at\",\n        label: \"Criado em\",\n        width: '10%',\n        options: {\n            filter: false,\n            customBodyRender(value, tableMeta, updateValue) {\n                return <span>{format(parseISO(value), 'dd/MM/yyyy')}</span>\n            }\n        }\n    },\n    {\n        name: \"actions\",\n        label: \"Ações\",\n        width: '13%',\n        options: {\n            filter: false,\n            sort: false,\n            customBodyRender: (value, tableMeta) => {\n                return (\n                    <span>\n                    <IconButton\n                        color={'secondary'}\n                        component={Link}\n                        to={`/cast-members/${tableMeta.rowData[0]}/edit`}\n                    >\n                        <EditIcon/>\n                    </IconButton>\n                </span>\n                )\n            }\n        }\n    }\n];\nconst debounceTime = 300;\nconst debouncedSearchTime = 300;\nconst rowsPerPage = 15;\nconst rowsPerPageOptions = [15, 25, 50];\nconst Table = () => {\n\n    const snackbar = useSnackbar();\n    const subscribed = useRef(true);\n    const [data, setData] = useState<CastMember[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const tableRef = useRef() as React.MutableRefObject<MuiDataTableRefComponent>;\n\n    const {\n        columns,\n        filterManager,\n        filterState,\n        debouncedFilterState,\n        dispatch,\n        totalRecords,\n        setTotalRecords,\n    } = useFilter({\n        columns: columnsDefinition,\n        debounceTime: debounceTime,\n        rowsPerPage,\n        rowsPerPageOptions,\n        tableRef,\n        extraFilter: {\n            createValidationSchema: () => {\n                return yup.object().shape({\n                    type: yup.string()\n                        .nullable()\n                        .transform(value => {\n                            return !value || !castMemberNames.includes(value) ? undefined : value;\n                        })\n                        .default(null)\n                })\n            },\n            formatSearchParams: (debouncedState) => {\n                return debouncedState.extraFilter\n                    ? {\n                        ...(\n                            debouncedState.extraFilter.type &&\n                            {type: debouncedState.extraFilter.type}\n                        ),\n                    }\n                    : undefined\n            },\n            getStateFromURL: (queryParams) => {\n                return {\n                    type: queryParams.get('type')\n                }\n            }\n        }\n    });\n    \n    const indexColumnType = columns.findIndex(c => c.name === 'type');\n    const columnType = columns[indexColumnType];\n    const typeFilterValue = filterState.extraFilter && filterState.extraFilter.type as never;\n    (columnType.options as any).filterList = typeFilterValue ? [typeFilterValue] : [];\n\n    const serverSideFilterList = columns.map(column => []);\n    if (typeFilterValue) {\n        serverSideFilterList[indexColumnType] = [typeFilterValue];\n    }\n\n    useEffect(() => {\n        subscribed.current = true;\n        filterManager.pushHistory();\n        getData();\n        return () => {\n            subscribed.current = false;\n        }\n    }, [\n        filterManager.cleanSearchText(debouncedFilterState.search),\n        debouncedFilterState.pagination.page,\n        debouncedFilterState.pagination.per_page,\n        debouncedFilterState.order,\n        JSON.stringify(debouncedFilterState.extraFilter)\n    ]);\n\n    async function getData() {\n        setLoading(true);\n        try {\n            const {data} = await castMemberHttp.list<ListResponse<CastMember>>({\n                queryParams: {\n                    search: filterManager.cleanSearchText(debouncedFilterState.search),\n                    page: debouncedFilterState.pagination.page,\n                    per_page: debouncedFilterState.pagination.per_page,\n                    sort: debouncedFilterState.order.sort,\n                    dir: debouncedFilterState.order.dir,\n                    ...(\n                        debouncedFilterState.extraFilter &&\n                        debouncedFilterState.extraFilter.type &&\n                        {type: invert(CastMemberTypeMap)[debouncedFilterState.extraFilter.type]}\n                    )\n                }\n            });\n            if (subscribed.current) {\n                setData(data.data);\n                setTotalRecords(data.meta.total);\n            }\n        } catch (error) {\n            console.error(error);\n            if (castMemberHttp.isCancelledRequest(error)) {\n                return;\n            }\n            snackbar.enqueueSnackbar(\n                'Não foi possível carregar as informações',\n                {variant: 'error',}\n            )\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <MuiThemeProvider theme={makeActionStyles(columnsDefinition.length - 1)}>\n            <DefaultTable\n                title=\"\"\n                columns={columns}\n                data={data}\n                loading={loading}\n                debouncedSearchTime={debouncedSearchTime}\n                ref={tableRef}\n                options={{\n                    serverSideFilterList,\n                    serverSide: true,\n                    responsive: \"scrollMaxHeight\",\n                    searchText: filterState.search as any,\n                    page: filterState.pagination.page - 1,\n                    rowsPerPage: filterState.pagination.per_page,\n                    rowsPerPageOptions,\n                    count: totalRecords,\n                    onFilterChange: (column, filterList, type) => {\n                        const columnIndex = columns.findIndex(c => c.name === column);\n                        \n                        filterManager.changeExtraFilter({\n                            [column]: filterList[columnIndex].length ? filterList[columnIndex][0] : null\n                        })\n                    },\n                    customToolbar: () => (\n                        <FilterResetButton\n                            handleClick={() => filterManager.resetFilter()}\n                        />\n                    ),\n                    onSearchChange: (value) => filterManager.changeSearch(value),\n                    onChangePage: (page) => filterManager.changePage(page),\n                    onChangeRowsPerPage: (perPage) => filterManager.changeRowsPerPage(perPage),\n                    onColumnSortChange: (changedColumn: string, direction: string) =>\n                        filterManager.changeColumnSort(changedColumn, direction)\n                }}\n            />\n        </MuiThemeProvider>\n    );\n};\n\nexport default Table;","/code-micro-videos/frontend/src/pages/genre/PageList.tsx",[],"/code-micro-videos/frontend/src/pages/genre/Table.tsx",["215","216","217","218","219","220","221"],"/code-micro-videos/frontend/src/util/http/category-http.ts",[],"/code-micro-videos/frontend/src/util/http/http-resource.ts",[],"/code-micro-videos/frontend/src/pages/category/PageForm.tsx",[],"/code-micro-videos/frontend/src/pages/category/Form.tsx",["222"],"import * as React from 'react'\nimport { useEffect, useState } from 'react'\nimport { TextField, Checkbox, FormControlLabel } from '@material-ui/core'\n\nimport useForm from 'react-hook-form';\nimport categoryHttp from '../../util/http/category-http';\nimport * as yup from '../../util/vendor/yup'\nimport { useHistory, useParams } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport { Category } from '../../util/models';\nimport SubmmitActions from '../../components/SubmmitActions';\nimport { DefaultForm } from '../../components/DefaultForm'\n\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string()\n        .label(\"Nome\")\n        .required()\n        .max(255)\n\n});\n\nexport const Form = () => {\n\n    const { register, handleSubmit, getValues, setValue, errors, reset, watch, triggerValidation } = useForm({\n\n        validationSchema: validationSchema,\n        defaultValues: {\n            is_active: true\n        }\n    });\n\n    const snackBar = useSnackbar();\n    const { id }: any = useParams();\n    const history = useHistory();\n    const [category, setCategory] = useState < Category | null > (null);\n    const [loading, setLoding] = useState < boolean > (false);\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        if (!id) {\n            return;\n        };\n\n        if (isSubscribed) {\n\n            (async () => {\n                setLoding(true);\n                try {\n                    const { data } = await categoryHttp.get(id);\n                    setCategory(data.data)\n                    reset(data.data);\n                } catch (error) {\n                    console.error(error);\n                    snackBar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                        variant: 'error'\n                    });\n                } finally {\n                    setLoding(false);\n                }\n            })();\n        }\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n\n    useEffect(() => {\n        register({ name: 'is_active' })\n\n    }, [register])\n\n    async function onSubmit(formData, event) {\n\n        setLoding(true);\n\n        try {\n            const http = !category\n                ? categoryHttp.create(formData)\n                : categoryHttp.update(category.id, formData);\n\n            const { data } = await http;\n            snackBar.enqueueSnackbar(\"Categoria salva com sucesso\", {\n                variant: 'success'\n            });\n\n            setTimeout(() => {\n\n                event ? (\n                    id ?\n                        history.replace(`/categories/${data.data.id}/edit`)\n                        :\n                        history.push(`/categories/${data.data.id}/edit`)\n                ) : history.push('/categories')\n            });\n\n        } catch (error) {\n            console.error(error);\n            snackBar.enqueueSnackbar(\"Não foi possível salvar a categoria\", {\n                variant: 'error'\n            });\n        } finally {\n            setLoding(false);\n        }\n    }\n\n    return (\n\n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name?.message}\n                InputLabelProps={{ shrink: true }}\n\n            />\n\n            <TextField\n                inputRef={register}\n                disabled={loading}\n                name=\"description\"\n                label=\"Descrição\"\n                multiline\n                rows=\"4\"\n                fullWidth\n                variant={\"outlined\"}\n                margin={\"normal\"}\n                InputLabelProps={{ shrink: true }}\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        color={\"primary\"}\n                        name=\"is_active\"\n                        onChange={\n                            () => setValue('is_active', !getValues()['is_active'])\n                        }\n                        checked={watch('is_active') as boolean}\n                    />\n                }\n                label={\"Ativo?\"}\n                labelPlacement={'end'}\n                disabled={loading}\n            />\n\n            <SubmmitActions disabledButtons={loading} handleSave={() => triggerValidation().then(isvalid => { isvalid && onSubmit(getValues(), null) })} />\n\n        </DefaultForm>\n    );\n};\n\n","/code-micro-videos/frontend/src/pages/cast-member/PageForm.tsx",[],"/code-micro-videos/frontend/src/pages/cast-member/Form.tsx",["223"],"import * as React from 'react';\nimport useForm from 'react-hook-form';\nimport castMemberHttp from '../../util/http/cast-member-http';\nimport { useEffect, useState } from 'react'\nimport { FormControl, FormLabel, Radio, TextField, RadioGroup, FormControlLabel, FormHelperText } from '@material-ui/core';\nimport * as yup from '../../util/vendor/yup'\nimport { useHistory, useParams } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport { CastMember } from '../../util/models';\nimport SubmmitActions from '../../components/SubmmitActions';\nimport { DefaultForm } from '../../components/DefaultForm'\n\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string()\n        .label(\"Nome\")\n        .required()\n        .max(255),\n    type: yup\n        .number()\n        .label(\"Tipo\")\n        .required(),\n\n});\n\nexport const Form = () => {\n\n    const { register, handleSubmit, getValues, setValue, errors, reset, watch, triggerValidation } = useForm({\n\n        validationSchema: validationSchema,\n\n    });\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { id }: any = useParams();\n    const [castMember, setCastMember] = useState < CastMember | null > (null);\n    const [loading, setLoading] = useState < boolean > (false);\n\n\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        if (!id) {\n            return;\n        }\n\n        if (isSubscribed) {\n\n            (async () => {\n                setLoading(true);\n                try {\n                    const { data } = await castMemberHttp.get(id);\n                    setCastMember(data.data);\n                    reset(data.data);\n                } catch (error) {\n                    console.error(error);\n                    snackBar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                        variant: \"error\"\n                    });\n                } finally {\n                    setLoading(false);\n                }\n            })();\n        }\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n    useEffect(() => {\n        register({ name: \"type\" })\n\n    }, [register]);\n\n    async function onSubmit(formData, event) {\n\n        setLoading(true);\n\n        try {\n            const http = !castMember\n                ? castMemberHttp.create(formData)\n                : castMemberHttp.update(castMember.id, formData);\n            const { data } = await http;\n\n            snackBar.enqueueSnackbar(\"Membro de elenco salvo com sucesso\", {\n                variant: \"success\"\n            });\n\n            setTimeout(() => {\n\n                event ? (\n                    id ?\n                        history.replace(`/cast-members/${data.data.id}/edit`)\n                        :\n                        history.push(`/cast-members/${data.data.id}/edit`)\n                ) : history.push('/cast-members')\n            });\n\n        } catch (error) {\n            console.error(error);\n            snackBar.enqueueSnackbar(\"Não foi possível salvar o membro de elenco\", {\n                variant: \"error\"\n            });\n        } finally {\n            setLoading(false);\n        }\n\n    }\n\n    return (\n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name.message}\n                InputLabelProps={{ shrink: true }}\n            />\n\n            <FormControl\n                margin={\"normal\"}\n                error={errors.type !== undefined}\n                disabled={loading}\n            >\n                <FormLabel component=\"legend\" >Tipo</FormLabel>\n                <RadioGroup\n                    name=\"type\"\n                    onChange={(e) => {\n                        setValue(\"type\", parseInt(e.target.value));\n                    }}\n                    value={watch('type') + \"\"}\n                >\n\n                    <FormControlLabel value=\"1\" control={<Radio />} label=\"Diretor\" />\n                    <FormControlLabel value=\"2\" control={<Radio />} label=\"Ator\" />\n                </RadioGroup>\n\n                {\n                    errors.type && <FormHelperText id=\"text-helper-text\"> {errors.type.message} </FormHelperText>\n\n                }\n\n            </FormControl>\n\n            <SubmmitActions disabledButtons={loading} handleSave={() => triggerValidation().then(isvalid => { isvalid && onSubmit(getValues(), null) })} />\n\n        </DefaultForm>\n    );\n\n}","/code-micro-videos/frontend/src/util/http/cast-member-http.ts",[],"/code-micro-videos/frontend/src/routes/categoryRoutes.tsx",[],"/code-micro-videos/frontend/src/routes/genresRoutes.tsx",[],"/code-micro-videos/frontend/src/routes/castMembersRoutes.tsx",[],"/code-micro-videos/frontend/src/routes/dashboardRoutes.tsx",[],"/code-micro-videos/frontend/src/pages/genre/PageForm.tsx",[],"/code-micro-videos/frontend/src/pages/genre/Form.tsx",["224"],"import * as React from 'react';\nimport { useState } from 'react'\nimport useForm from 'react-hook-form';\nimport { useEffect } from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport categoryHttp from '../../util/http/category-http';\nimport genreHttp from '../../util/http/genre-http';\nimport * as yup from '../../util/vendor/yup'\nimport { useHistory, useParams } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport { Category, Genre } from '../../util/models';\nimport SubmmitActions from '../../components/SubmmitActions';\nimport { DefaultForm } from '../../components/DefaultForm'\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string()\n        .label(\"Nome\")\n        .required()\n        .max(255),\n    categories_id: yup\n        .array()\n        .label(\"Categorias\")\n        .required(),\n\n});\n\nexport const Form = () => {\n\n    const { register, handleSubmit, getValues, setValue, watch, errors, reset, triggerValidation } = useForm({\n        validationSchema,\n        defaultValues: {\n            categories_id: [] as any\n        }\n    });\n\n\n    const snackbar = useSnackbar();\n    const history = useHistory();\n    const { id }: any = useParams();\n    const [genre, setGenre] = useState < Genre | null > (null);\n    const [categories, setCategories] = useState < Category[] > ([]);\n    const [loading, setLoading] = useState < boolean > (false);\n\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        if (isSubscribed) {\n\n            (async () => {\n                setLoading(true);\n                const promises = [categoryHttp.list({queryParams:{all: ''}})];\n                if (id) {\n                    promises.push(genreHttp.get(id));\n                }\n                try {\n                    const [categoriesResponse, genreResponse] = await Promise.all(promises);\n                    setCategories(categoriesResponse.data.data);\n\n                    if (id) {\n                        setGenre(genreResponse.data.data);\n                        const categories_id = genreResponse.data.data.categories.map(category => category.id)\n                        reset({\n                            ...genreResponse.data.data,\n                            categories_id\n                        });\n                    }\n\n                } catch (error) {\n                    console.error(error);\n                    snackbar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                        variant: \"error\"\n                    })\n                } finally {\n                    setLoading(false);\n                }\n            })();\n        }\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n\n    useEffect(() => {\n        register({ name: \"categories_id\" })\n\n    }, [register]);\n\n\n\n    async function onSubmit(formData, event) {\n\n        setLoading(true);\n\n        try {\n            const http = !genre\n                ? genreHttp.create(formData)\n                : genreHttp.update(genre.id, formData);\n\n            const { data } = await http;\n\n            snackbar.enqueueSnackbar(\"Gênero salvo com sucesso!\", {\n                variant: \"success\"\n            });\n\n            setTimeout(() => {\n\n                event ? (\n                    id ?\n                        history.replace(`/genres/${data.data.id}/edit`)\n                        :\n                        history.push(`/genres/${data.data.id}/edit`)\n                ) : history.push('/genres')\n            });\n\n        } catch (error) {\n            console.error(error);\n            snackbar.enqueueSnackbar(\"Não foi possível salvar o gênero\", {\n                variant: \"error\"\n            });\n\n        } finally {\n            setLoading(false);\n        }\n\n    }\n\n    return (\n        \n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name.message}\n                InputLabelProps={{ shrink: true }}\n            />\n\n            <TextField\n                select\n                name=\"categories_id\"\n                value={watch('categories_id')}\n                label='Categorias'\n                margin={'normal'}\n                variant={'outlined'}\n                fullWidth\n                onChange={(e) => {\n                    setValue('categories_id', e.target.value);\n                }}\n\n                SelectProps={{ multiple: true }}\n                disabled={loading}\n                error={errors.categories_id !== undefined}\n                helperText={errors.categories_id && errors.categories_id.message}\n                InputLabelProps={{ shrink: true }}\n            >\n                <MenuItem value=\"\" disabled>\n                    <em>Selecione categorias</em>\n                </MenuItem>\n                {\n                    categories.map(\n                        (category, key) => (\n                            <MenuItem key={key} value={category.id} >{category.name}</MenuItem>\n                        )\n                    )\n                }\n\n            </TextField>\n\n            <SubmmitActions disabledButtons={loading} handleSave={() => triggerValidation().then(isvalid => { isvalid && onSubmit(getValues(), null) })} />\n\n        </DefaultForm>\n    );\n\n}","/code-micro-videos/frontend/src/util/http/genre-http.ts",[],"/code-micro-videos/frontend/src/theme.ts",[],"/code-micro-videos/frontend/src/components/Badge.tsx",[],"/code-micro-videos/frontend/src/util/vendor/yup.ts",["225","226","227"],"import {LocaleObject, setLocale} from 'yup';\n\nconst ptBR: LocaleObject = {\n    mixed: {\n        required: '${path} é requerido'\n    },\n    string: {\n        max: '${path} precisa ter no máximo ${max} caracteres'\n    },\n    number: {\n        min: '${path} precisa ser no mínimo ${min}'\n    }\n};\n\nsetLocale(ptBR);\n\nexport * from 'yup';","/code-micro-videos/frontend/src/components/SnackbarProvider.tsx",[],"/code-micro-videos/frontend/src/util/models.ts",[],"/code-micro-videos/frontend/src/components/SubmmitActions.tsx",[],"/code-micro-videos/frontend/src/components/DefaultForm.tsx",[],"/code-micro-videos/frontend/src/components/Table/index.tsx",[],"/code-micro-videos/frontend/src/components/Table/FilterResetButton.tsx",[],"/code-micro-videos/frontend/src/components/Table/DebouncedTableSearch.js",[],["228","229"],"/code-micro-videos/frontend/src/store/filter/index.ts",[],"/code-micro-videos/frontend/src/hooks/useFilter.ts",["230"],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"231","replacedBy":"235"},{"ruleId":"233","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":2,"column":20,"nodeType":"239","messageId":"240","endLine":2,"endColumn":30},{"ruleId":"237","severity":1,"message":"241","line":10,"column":39,"nodeType":"239","messageId":"240","endLine":10,"endColumn":44},{"ruleId":"237","severity":1,"message":"242","line":14,"column":8,"nodeType":"239","messageId":"240","endLine":14,"endColumn":15},{"ruleId":"237","severity":1,"message":"243","line":14,"column":18,"nodeType":"239","messageId":"240","endLine":14,"endColumn":31},{"ruleId":"237","severity":1,"message":"244","line":14,"column":33,"nodeType":"239","messageId":"240","endLine":14,"endColumn":41},{"ruleId":"237","severity":1,"message":"245","line":98,"column":9,"nodeType":"239","messageId":"240","endLine":98,"endColumn":17},{"ruleId":"246","severity":1,"message":"247","line":116,"column":8,"nodeType":"248","endLine":121,"endColumn":6,"suggestions":"249"},{"ruleId":"246","severity":1,"message":"250","line":117,"column":9,"nodeType":"251","endLine":117,"endColumn":67},{"ruleId":"237","severity":1,"message":"245","line":102,"column":9,"nodeType":"239","messageId":"240","endLine":102,"endColumn":17},{"ruleId":"246","severity":1,"message":"247","line":157,"column":8,"nodeType":"248","endLine":163,"endColumn":6,"suggestions":"252"},{"ruleId":"246","severity":1,"message":"250","line":158,"column":9,"nodeType":"251","endLine":158,"endColumn":67},{"ruleId":"246","severity":1,"message":"250","line":162,"column":9,"nodeType":"251","endLine":162,"endColumn":57},{"ruleId":"237","severity":1,"message":"253","line":18,"column":9,"nodeType":"239","messageId":"240","endLine":18,"endColumn":18},{"ruleId":"237","severity":1,"message":"254","line":107,"column":12,"nodeType":"239","messageId":"240","endLine":107,"endColumn":22},{"ruleId":"237","severity":1,"message":"245","line":115,"column":9,"nodeType":"239","messageId":"240","endLine":115,"endColumn":17},{"ruleId":"246","severity":1,"message":"255","line":181,"column":8,"nodeType":"248","endLine":181,"endColumn":10,"suggestions":"256"},{"ruleId":"246","severity":1,"message":"247","line":190,"column":8,"nodeType":"248","endLine":196,"endColumn":6,"suggestions":"257"},{"ruleId":"246","severity":1,"message":"250","line":191,"column":9,"nodeType":"251","endLine":191,"endColumn":67},{"ruleId":"246","severity":1,"message":"250","line":195,"column":9,"nodeType":"251","endLine":195,"endColumn":57},{"ruleId":"246","severity":1,"message":"258","line":71,"column":8,"nodeType":"248","endLine":71,"endColumn":10,"suggestions":"259"},{"ruleId":"246","severity":1,"message":"258","line":74,"column":8,"nodeType":"248","endLine":74,"endColumn":10,"suggestions":"260"},{"ruleId":"246","severity":1,"message":"261","line":86,"column":8,"nodeType":"248","endLine":86,"endColumn":10,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":5,"column":19,"nodeType":"265","messageId":"266","endLine":5,"endColumn":40},{"ruleId":"263","severity":1,"message":"264","line":8,"column":14,"nodeType":"265","messageId":"266","endLine":8,"endColumn":63},{"ruleId":"263","severity":1,"message":"264","line":11,"column":14,"nodeType":"265","messageId":"266","endLine":11,"endColumn":52},{"ruleId":"231","replacedBy":"235"},{"ruleId":"233","replacedBy":"236"},{"ruleId":"246","severity":1,"message":"267","line":47,"column":8,"nodeType":"248","endLine":47,"endColumn":10,"suggestions":"268"},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],["269"],["270"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'Theme' is defined but never used.","'reducer' is defined but never used.","'INITIAL_STATE' is defined but never used.","'Creators' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterManager' and 'getData'. Either include them or remove the dependency array.","ArrayExpression",["271"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["272"],"'cloneDeep' is defined but never used.","'categories' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'columnCategories.options' and 'snackbar'. Either include them or remove the dependency array.",["273"],["274"],"React Hook useEffect has missing dependencies: 'id', 'reset', and 'snackBar'. Either include them or remove the dependency array.",["275"],["276"],"React Hook useEffect has missing dependencies: 'id', 'reset', and 'snackbar'. Either include them or remove the dependency array.",["277"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","React Hook useEffect has a missing dependency: 'filterManager'. Either include it or remove the dependency array.",["278"],"no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"279","fix":"281"},{"desc":"282","fix":"283"},{"desc":"279","fix":"284"},{"desc":"285","fix":"286"},{"desc":"285","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [debouncedFilterState.pagination.page, debouncedFilterState.pagination.per_page, debouncedFilterState.order, filterManager, getData]",{"range":"292","text":"293"},{"range":"294","text":"293"},"Update the dependencies array to be: [columnCategories.options, snackbar]",{"range":"295","text":"296"},{"range":"297","text":"293"},"Update the dependencies array to be: [id, reset, snackBar]",{"range":"298","text":"299"},{"range":"300","text":"299"},"Update the dependencies array to be: [id, reset, snackbar]",{"range":"301","text":"302"},"Update the dependencies array to be: [filterManager]",{"range":"303","text":"304"},[3342,3548],"[debouncedFilterState.pagination.page, debouncedFilterState.pagination.per_page, debouncedFilterState.order, filterManager, getData]",[4851,5115],[5810,5812],"[columnCategories.options, snackbar]",[6009,6273],[1988,1990],"[id, reset, snackBar]",[2075,2077],[2718,2720],"[id, reset, snackbar]",[1781,1783],"[filterManager]"]