[{"/var/www/frontend/src/index.tsx":"1","/var/www/frontend/src/reportWebVitals.ts":"2","/var/www/frontend/src/App.tsx":"3","/var/www/frontend/src/components/Navbar/index.tsx":"4","/code-micro-videos/frontend/src/index.tsx":"5","/code-micro-videos/frontend/src/reportWebVitals.ts":"6","/code-micro-videos/frontend/src/App.tsx":"7","/code-micro-videos/frontend/src/components/Navbar/index.tsx":"8","/code-micro-videos/frontend/src/components/Navbar/Menu.tsx":"9","/code-micro-videos/frontend/src/components/Page.tsx":"10","/code-micro-videos/frontend/src/routes/AppRouter.tsx":"11","/code-micro-videos/frontend/src/routes/index.tsx":"12","/code-micro-videos/frontend/src/pages/Dashboard.tsx":"13","/code-micro-videos/frontend/src/components/Breadcrumbs.tsx":"14","/code-micro-videos/frontend/src/pages/category/PageList.tsx":"15","/code-micro-videos/frontend/src/pages/category/Table.tsx":"16","/code-micro-videos/frontend/src/util/http/index.ts":"17","/code-micro-videos/frontend/src/pages/cast-member/PageList.tsx":"18","/code-micro-videos/frontend/src/pages/cast-member/Table.tsx":"19","/code-micro-videos/frontend/src/pages/genre/PageList.tsx":"20","/code-micro-videos/frontend/src/pages/genre/Table.tsx":"21","/code-micro-videos/frontend/src/util/http/category-http.ts":"22","/code-micro-videos/frontend/src/util/http/http-resource.ts":"23","/code-micro-videos/frontend/src/pages/category/PageForm.tsx":"24","/code-micro-videos/frontend/src/pages/category/Form.tsx":"25","/code-micro-videos/frontend/src/pages/cast-member/PageForm.tsx":"26","/code-micro-videos/frontend/src/pages/cast-member/Form.tsx":"27","/code-micro-videos/frontend/src/util/http/cast-member-http.ts":"28","/code-micro-videos/frontend/src/routes/categoryRoutes.tsx":"29","/code-micro-videos/frontend/src/routes/genresRoutes.tsx":"30","/code-micro-videos/frontend/src/routes/castMembersRoutes.tsx":"31","/code-micro-videos/frontend/src/routes/dashboardRoutes.tsx":"32","/code-micro-videos/frontend/src/pages/genre/PageForm.tsx":"33","/code-micro-videos/frontend/src/pages/genre/Form.tsx":"34","/code-micro-videos/frontend/src/util/http/genre-http.ts":"35","/code-micro-videos/frontend/src/theme.ts":"36","/code-micro-videos/frontend/src/components/Badge.tsx":"37","/code-micro-videos/frontend/src/util/vendor/yup.ts":"38","/code-micro-videos/frontend/src/components/SnackbarProvider.tsx":"39","/code-micro-videos/frontend/src/util/models.ts":"40","/code-micro-videos/frontend/src/components/SubmmitActions.tsx":"41","/code-micro-videos/frontend/src/components/DefaultForm.tsx":"42","/code-micro-videos/frontend/src/components/Table/index.tsx":"43","/code-micro-videos/frontend/src/components/Table/FilterResetButton.tsx":"44","/code-micro-videos/frontend/src/components/Table/DebouncedTableSearch.js":"45","/code-micro-videos/frontend/src/store/filter/index.ts":"46","/code-micro-videos/frontend/src/hooks/useFilter.ts":"47","/code-micro-videos/frontend/src/routes/videoRoutes.tsx":"48","/code-micro-videos/frontend/src/pages/video/PageForm.tsx":"49","/code-micro-videos/frontend/src/pages/video/PageList.tsx":"50","/code-micro-videos/frontend/src/pages/video/Table.tsx":"51","/code-micro-videos/frontend/src/util/http/video-http.ts":"52","/code-micro-videos/frontend/src/components/Rating.tsx":"53","/code-micro-videos/frontend/src/pages/video/Form/Index.tsx":"54","/code-micro-videos/frontend/src/pages/video/Form/RatingField.tsx":"55","/code-micro-videos/frontend/src/components/InputFile.tsx":"56","/code-micro-videos/frontend/src/pages/video/Form/UploadField.tsx":"57","/code-micro-videos/frontend/src/components/AsyncAutoComplete.tsx":"58","/code-micro-videos/frontend/src/components/GridSelectedItem.tsx":"59","/code-micro-videos/frontend/src/components/GridSelected.tsx":"60","/code-micro-videos/frontend/src/hooks/useHttpHandled.ts":"61","/code-micro-videos/frontend/src/pages/video/Form/GenreField.tsx":"62","/code-micro-videos/frontend/src/pages/video/Form/CategoryField.tsx":"63","/code-micro-videos/frontend/src/hooks/useCollectionManager.ts":"64","/code-micro-videos/frontend/src/util/model-filters.ts":"65","/code-micro-videos/frontend/src/pages/video/Form/CastMemberField.tsx":"66","/code-micro-videos/frontend/src/hooks/useSnackbarFormError.ts":"67","/var/www/frontend/src/theme.ts":"68","/var/www/frontend/src/components/Breadcrumbs.tsx":"69","/var/www/frontend/src/components/SnackbarProvider.tsx":"70","/var/www/frontend/src/routes/AppRouter.tsx":"71","/var/www/frontend/src/routes/index.tsx":"72","/var/www/frontend/src/components/Navbar/Menu.tsx":"73","/var/www/frontend/src/routes/dashboardRoutes.tsx":"74","/var/www/frontend/src/routes/castMembersRoutes.tsx":"75","/var/www/frontend/src/pages/Dashboard.tsx":"76","/var/www/frontend/src/pages/cast-member/PageForm.tsx":"77","/var/www/frontend/src/components/Page.tsx":"78","/var/www/frontend/src/pages/cast-member/Form.tsx":"79","/var/www/frontend/src/components/DefaultForm.tsx":"80","/var/www/frontend/src/components/SubmmitActions.tsx":"81","/var/www/frontend/src/util/vendor/yup.ts":"82","/var/www/frontend/src/util/http/cast-member-http.ts":"83","/var/www/frontend/src/pages/cast-member/PageList.tsx":"84","/var/www/frontend/src/routes/genresRoutes.tsx":"85","/var/www/frontend/src/routes/videoRoutes.tsx":"86","/var/www/frontend/src/routes/categoryRoutes.tsx":"87","/var/www/frontend/src/util/http/index.ts":"88","/var/www/frontend/src/pages/cast-member/Table.tsx":"89","/var/www/frontend/src/pages/genre/PageForm.tsx":"90","/var/www/frontend/src/pages/video/PageForm.tsx":"91","/var/www/frontend/src/pages/category/PageForm.tsx":"92","/var/www/frontend/src/pages/category/PageList.tsx":"93","/var/www/frontend/src/util/http/http-resource.ts":"94","/var/www/frontend/src/pages/video/PageList.tsx":"95","/var/www/frontend/src/pages/genre/PageList.tsx":"96","/var/www/frontend/src/util/models.ts":"97","/var/www/frontend/src/hooks/useFilter.ts":"98","/var/www/frontend/src/components/Table/FilterResetButton.tsx":"99","/var/www/frontend/src/pages/video/Table.tsx":"100","/var/www/frontend/src/pages/genre/Table.tsx":"101","/var/www/frontend/src/pages/category/Table.tsx":"102","/var/www/frontend/src/pages/category/Form.tsx":"103","/var/www/frontend/src/pages/genre/Form.tsx":"104","/var/www/frontend/src/pages/video/Form/Index.tsx":"105","/var/www/frontend/src/components/Table/index.tsx":"106","/var/www/frontend/src/util/http/video-http.ts":"107","/var/www/frontend/src/util/http/genre-http.ts":"108","/var/www/frontend/src/util/http/category-http.ts":"109","/var/www/frontend/src/components/Badge.tsx":"110","/var/www/frontend/src/hooks/useSnackbarFormError.ts":"111","/var/www/frontend/src/components/Table/DebouncedTableSearch.js":"112","/var/www/frontend/src/pages/video/Form/RatingField.tsx":"113","/var/www/frontend/src/pages/video/Form/UploadField.tsx":"114","/var/www/frontend/src/pages/video/Form/GenreField.tsx":"115","/var/www/frontend/src/pages/video/Form/CategoryField.tsx":"116","/var/www/frontend/src/pages/video/Form/CastMemberField.tsx":"117","/var/www/frontend/src/store/filter/index.ts":"118","/var/www/frontend/src/hooks/useHttpHandled.ts":"119","/var/www/frontend/src/hooks/useCollectionManager.ts":"120","/var/www/frontend/src/util/model-filters.ts":"121","/var/www/frontend/src/components/Rating.tsx":"122","/var/www/frontend/src/components/InputFile.tsx":"123","/var/www/frontend/src/components/GridSelected.tsx":"124","/var/www/frontend/src/components/AsyncAutoComplete.tsx":"125","/var/www/frontend/src/components/GridSelectedItem.tsx":"126","/code-micro-videos/frontend/src/components/DeleteDialog.tsx":"127","/code-micro-videos/frontend/src/hooks/useDeleteCollection.ts":"128","/code-micro-videos/frontend/src/components/Spinner.tsx":"129","/code-micro-videos/frontend/src/components/loading/LoadingContext.tsx":"130","/code-micro-videos/frontend/src/components/loading/LoadingProvider.tsx":"131","/code-micro-videos/frontend/src/components/SnackbarUpload/index.tsx":"132","/code-micro-videos/frontend/src/components/SnackbarUpload/UploadItem.tsx":"133","/code-micro-videos/frontend/src/components/UploadProgress.tsx":"134","/code-micro-videos/frontend/src/routes/uploadRoutes.tsx":"135","/code-micro-videos/frontend/src/pages/uploads/index.tsx":"136","/code-micro-videos/frontend/src/pages/uploads/UploadItem.tsx":"137","/code-micro-videos/frontend/src/pages/uploads/UploadAction.tsx":"138"},{"size":500,"mtime":1611865961266,"results":"139","hashOfConfig":"140"},{"size":425,"mtime":1611865961266,"results":"141","hashOfConfig":"140"},{"size":835,"mtime":1618081186416,"results":"142","hashOfConfig":"140"},{"size":941,"mtime":1611971943655,"results":"143","hashOfConfig":"140"},{"size":500,"mtime":1611865961266,"results":"144","hashOfConfig":"145"},{"size":425,"mtime":1611865961266,"results":"146","hashOfConfig":"145"},{"size":1126,"mtime":1629138892732,"results":"147","hashOfConfig":"145"},{"size":941,"mtime":1611971943655,"results":"148","hashOfConfig":"145"},{"size":2300,"mtime":1625800275328,"results":"149","hashOfConfig":"145"},{"size":616,"mtime":1612319500111,"results":"150","hashOfConfig":"145"},{"size":614,"mtime":1612026293655,"results":"151","hashOfConfig":"145"},{"size":667,"mtime":1629246481207,"results":"152","hashOfConfig":"145"},{"size":282,"mtime":1612023918713,"results":"153","hashOfConfig":"145"},{"size":2461,"mtime":1614898469175,"results":"154","hashOfConfig":"145"},{"size":739,"mtime":1614890359578,"results":"155","hashOfConfig":"145"},{"size":6005,"mtime":1629142817335,"results":"156","hashOfConfig":"145"},{"size":1240,"mtime":1629140847459,"results":"157","hashOfConfig":"145"},{"size":745,"mtime":1614890370970,"results":"158","hashOfConfig":"145"},{"size":8337,"mtime":1625601820538,"results":"159","hashOfConfig":"145"},{"size":728,"mtime":1614890341345,"results":"160","hashOfConfig":"145"},{"size":9457,"mtime":1625602232122,"results":"161","hashOfConfig":"145"},{"size":173,"mtime":1625598564999,"results":"162","hashOfConfig":"145"},{"size":2430,"mtime":1628556775528,"results":"163","hashOfConfig":"145"},{"size":367,"mtime":1617422438367,"results":"164","hashOfConfig":"145"},{"size":4591,"mtime":1629142837564,"results":"165","hashOfConfig":"145"},{"size":263,"mtime":1613521279483,"results":"166","hashOfConfig":"145"},{"size":4687,"mtime":1626795832590,"results":"167","hashOfConfig":"145"},{"size":179,"mtime":1625598550855,"results":"168","hashOfConfig":"145"},{"size":706,"mtime":1617418804994,"results":"169","hashOfConfig":"145"},{"size":641,"mtime":1618081782531,"results":"170","hashOfConfig":"145"},{"size":755,"mtime":1618081698996,"results":"171","hashOfConfig":"145"},{"size":217,"mtime":1613523159029,"results":"172","hashOfConfig":"145"},{"size":254,"mtime":1618089339600,"results":"173","hashOfConfig":"145"},{"size":5563,"mtime":1626795774283,"results":"174","hashOfConfig":"145"},{"size":163,"mtime":1625598579503,"results":"175","hashOfConfig":"145"},{"size":3463,"mtime":1625599279249,"results":"176","hashOfConfig":"145"},{"size":637,"mtime":1614898053376,"results":"177","hashOfConfig":"145"},{"size":377,"mtime":1629128951597,"results":"178","hashOfConfig":"145"},{"size":1526,"mtime":1626261926003,"results":"179","hashOfConfig":"145"},{"size":1605,"mtime":1625800620745,"results":"180","hashOfConfig":"145"},{"size":1037,"mtime":1618349567645,"results":"181","hashOfConfig":"145"},{"size":875,"mtime":1618370285382,"results":"182","hashOfConfig":"145"},{"size":4374,"mtime":1625598312447,"results":"183","hashOfConfig":"145"},{"size":672,"mtime":1625598827387,"results":"184","hashOfConfig":"145"},{"size":3680,"mtime":1625599956994,"results":"185","hashOfConfig":"145"},{"size":3013,"mtime":1625598471280,"results":"186","hashOfConfig":"145"},{"size":8434,"mtime":1625603845288,"results":"187","hashOfConfig":"145"},{"size":636,"mtime":1625800947221,"results":"188","hashOfConfig":"145"},{"size":369,"mtime":1625870793890,"results":"189","hashOfConfig":"145"},{"size":785,"mtime":1625800417066,"results":"190","hashOfConfig":"145"},{"size":7814,"mtime":1628556968799,"results":"191","hashOfConfig":"145"},{"size":163,"mtime":1625801362761,"results":"192","hashOfConfig":"145"},{"size":942,"mtime":1625870469510,"results":"193","hashOfConfig":"145"},{"size":16262,"mtime":1629208797272,"results":"194","hashOfConfig":"145"},{"size":2205,"mtime":1625874131577,"results":"195","hashOfConfig":"145"},{"size":2159,"mtime":1627077575461,"results":"196","hashOfConfig":"145"},{"size":2162,"mtime":1627076928114,"results":"197","hashOfConfig":"145"},{"size":3203,"mtime":1627080633034,"results":"198","hashOfConfig":"145"},{"size":911,"mtime":1627002176212,"results":"199","hashOfConfig":"145"},{"size":724,"mtime":1626736547429,"results":"200","hashOfConfig":"145"},{"size":504,"mtime":1626792099563,"results":"201","hashOfConfig":"145"},{"size":4150,"mtime":1627076622800,"results":"202","hashOfConfig":"145"},{"size":4341,"mtime":1627076493059,"results":"203","hashOfConfig":"145"},{"size":781,"mtime":1626747412588,"results":"204","hashOfConfig":"145"},{"size":240,"mtime":1627098886979,"results":"205","hashOfConfig":"145"},{"size":3595,"mtime":1627078236713,"results":"206","hashOfConfig":"145"},{"size":493,"mtime":1628551916980,"results":"207","hashOfConfig":"145"},{"size":3463,"mtime":1625599279249,"results":"208","hashOfConfig":"140"},{"size":2461,"mtime":1614898469175,"results":"209","hashOfConfig":"140"},{"size":1526,"mtime":1626261926003,"results":"210","hashOfConfig":"140"},{"size":614,"mtime":1612026293655,"results":"211","hashOfConfig":"140"},{"size":591,"mtime":1625800137105,"results":"212","hashOfConfig":"140"},{"size":2300,"mtime":1625800275328,"results":"213","hashOfConfig":"140"},{"size":217,"mtime":1613523159029,"results":"214","hashOfConfig":"140"},{"size":755,"mtime":1618081698996,"results":"215","hashOfConfig":"140"},{"size":282,"mtime":1612023918713,"results":"216","hashOfConfig":"140"},{"size":263,"mtime":1613521279483,"results":"217","hashOfConfig":"140"},{"size":616,"mtime":1612319500111,"results":"218","hashOfConfig":"140"},{"size":4687,"mtime":1626795832590,"results":"219","hashOfConfig":"140"},{"size":875,"mtime":1618370285382,"results":"220","hashOfConfig":"140"},{"size":1037,"mtime":1618349567645,"results":"221","hashOfConfig":"140"},{"size":377,"mtime":1625805101145,"results":"222","hashOfConfig":"140"},{"size":179,"mtime":1625598550855,"results":"223","hashOfConfig":"140"},{"size":745,"mtime":1614890370970,"results":"224","hashOfConfig":"140"},{"size":641,"mtime":1618081782531,"results":"225","hashOfConfig":"140"},{"size":636,"mtime":1625800947221,"results":"226","hashOfConfig":"140"},{"size":706,"mtime":1617418804994,"results":"227","hashOfConfig":"140"},{"size":127,"mtime":1625598635481,"results":"228","hashOfConfig":"140"},{"size":8337,"mtime":1625601820538,"results":"229","hashOfConfig":"140"},{"size":254,"mtime":1618089339600,"results":"230","hashOfConfig":"140"},{"size":369,"mtime":1625870793890,"results":"231","hashOfConfig":"140"},{"size":367,"mtime":1617422438367,"results":"232","hashOfConfig":"140"},{"size":739,"mtime":1614890359578,"results":"233","hashOfConfig":"140"},{"size":2161,"mtime":1627077174395,"results":"234","hashOfConfig":"140"},{"size":785,"mtime":1625800417066,"results":"235","hashOfConfig":"140"},{"size":728,"mtime":1614890341345,"results":"236","hashOfConfig":"140"},{"size":1605,"mtime":1625800620745,"results":"237","hashOfConfig":"140"},{"size":8434,"mtime":1625603845288,"results":"238","hashOfConfig":"140"},{"size":672,"mtime":1625598827387,"results":"239","hashOfConfig":"140"},{"size":6324,"mtime":1627069217274,"results":"240","hashOfConfig":"140"},{"size":9457,"mtime":1625602232122,"results":"241","hashOfConfig":"140"},{"size":6083,"mtime":1625800437470,"results":"242","hashOfConfig":"140"},{"size":4676,"mtime":1626795763443,"results":"243","hashOfConfig":"140"},{"size":5563,"mtime":1626795774283,"results":"244","hashOfConfig":"140"},{"size":15828,"mtime":1628551934099,"results":"245","hashOfConfig":"140"},{"size":4374,"mtime":1625598312447,"results":"246","hashOfConfig":"140"},{"size":163,"mtime":1625801362761,"results":"247","hashOfConfig":"140"},{"size":163,"mtime":1625598579503,"results":"248","hashOfConfig":"140"},{"size":173,"mtime":1625598564999,"results":"249","hashOfConfig":"140"},{"size":637,"mtime":1614898053376,"results":"250","hashOfConfig":"140"},{"size":493,"mtime":1628551916980,"results":"251","hashOfConfig":"140"},{"size":3680,"mtime":1625599956994,"results":"252","hashOfConfig":"140"},{"size":2205,"mtime":1625874131577,"results":"253","hashOfConfig":"140"},{"size":2162,"mtime":1627076928114,"results":"254","hashOfConfig":"140"},{"size":4150,"mtime":1627076622800,"results":"255","hashOfConfig":"140"},{"size":4341,"mtime":1627076493059,"results":"256","hashOfConfig":"140"},{"size":3595,"mtime":1627078236713,"results":"257","hashOfConfig":"140"},{"size":3013,"mtime":1625598471280,"results":"258","hashOfConfig":"140"},{"size":504,"mtime":1626792099563,"results":"259","hashOfConfig":"140"},{"size":781,"mtime":1626747412588,"results":"260","hashOfConfig":"140"},{"size":240,"mtime":1627098886979,"results":"261","hashOfConfig":"140"},{"size":942,"mtime":1625870469510,"results":"262","hashOfConfig":"140"},{"size":2159,"mtime":1627077575461,"results":"263","hashOfConfig":"140"},{"size":724,"mtime":1626736547429,"results":"264","hashOfConfig":"140"},{"size":3203,"mtime":1627080633034,"results":"265","hashOfConfig":"140"},{"size":911,"mtime":1627002176212,"results":"266","hashOfConfig":"140"},{"size":1245,"mtime":1628555475890,"results":"267","hashOfConfig":"145"},{"size":526,"mtime":1628556605396,"results":"268","hashOfConfig":"145"},{"size":898,"mtime":1629143097529,"results":"269","hashOfConfig":"145"},{"size":116,"mtime":1628908034222,"results":"270","hashOfConfig":"145"},{"size":1801,"mtime":1629148111608,"results":"271","hashOfConfig":"145"},{"size":2789,"mtime":1629214407537,"results":"272","hashOfConfig":"145"},{"size":1771,"mtime":1629222391502,"results":"273","hashOfConfig":"145"},{"size":1096,"mtime":1629222685792,"results":"274","hashOfConfig":"145"},{"size":246,"mtime":1629246435797,"results":"275","hashOfConfig":"145"},{"size":2255,"mtime":1629248914837,"results":"276","hashOfConfig":"145"},{"size":1805,"mtime":1629249026201,"results":"277","hashOfConfig":"145"},{"size":1716,"mtime":1629248956202,"results":"278","hashOfConfig":"145"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},"1dpw0hl",{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},"1qzgm0n",{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"290"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"290"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"290"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"290"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"290"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"290"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"290"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"290"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"290"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"290"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"290"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"290"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"290"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"290"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"290"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"290"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"498","messages":"499","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"290"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/frontend/src/index.tsx",[],["575","576"],"/var/www/frontend/src/reportWebVitals.ts",[],"/var/www/frontend/src/App.tsx",[],"/var/www/frontend/src/components/Navbar/index.tsx",[],"/code-micro-videos/frontend/src/index.tsx",[],["577","578"],"/code-micro-videos/frontend/src/reportWebVitals.ts",[],"/code-micro-videos/frontend/src/App.tsx",[],"/code-micro-videos/frontend/src/components/Navbar/index.tsx",[],"/code-micro-videos/frontend/src/components/Navbar/Menu.tsx",[],"/code-micro-videos/frontend/src/components/Page.tsx",[],"/code-micro-videos/frontend/src/routes/AppRouter.tsx",[],"/code-micro-videos/frontend/src/routes/index.tsx",[],"/code-micro-videos/frontend/src/pages/Dashboard.tsx",[],"/code-micro-videos/frontend/src/components/Breadcrumbs.tsx",[],"/code-micro-videos/frontend/src/pages/category/PageList.tsx",[],"/code-micro-videos/frontend/src/pages/category/Table.tsx",["579","580","581","582"],"import * as React from 'react';\nimport {useEffect, useRef, useState, useContext} from \"react\";\nimport format from \"date-fns/format\";\nimport parseISO from \"date-fns/parseISO\";\nimport categoryHttp from \"../../util/http/category-http\";\nimport {BadgeNo, BadgeYes} from \"../../components/Badge\";\nimport {Category, ListResponse} from \"../../util/models\";\nimport DefaultTable, {makeActionStyles, TableColumn, MuiDataTableRefComponent} from '../../components/Table';\nimport {useSnackbar} from \"notistack\";\nimport {IconButton, MuiThemeProvider, Theme} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport {FilterResetButton} from \"../../components/Table/FilterResetButton\";\n\nimport useFilter from \"../../hooks/useFilter\";\nimport LoadingContext from '../../components/loading/LoadingContext';\n\nconst columnsDefinition: TableColumn[] = [\n    {\n        name: 'id',\n        label: 'ID',\n        width: '30%',\n        options: {\n            sort: false,\n            filter: false\n        }\n    },\n    {\n        name: \"name\",\n        label: \"Nome\",\n        width: '43%',\n        options: {\n            filter: false\n        }\n    },\n    {\n        name: \"is_active\",\n        label: \"Ativo?\",\n        width: '4%',\n        options: {\n            filter: true,\n            filterOptions: {\n              names: ['Sim', 'Não']\n            },\n            customBodyRender(value, tableMeta, updateValue) {\n                return value ? <BadgeYes/> : <BadgeNo/>;\n            }\n        },\n    },\n    {\n        name: \"created_at\",\n        label: \"Criado em\",\n        width: '10%',\n        options: {\n            filter: false,\n            customBodyRender(value, tableMeta, updateValue) {\n                return <span>{format(parseISO(value), 'dd/MM/yyyy')}</span>\n            }\n        }\n    },\n    {\n        name: \"actions\",\n        label: \"Ações\",\n        width: '13%',\n        options: {\n            sort: false,\n            filter: false,\n            customBodyRender: (value, tableMeta) => {\n                return (\n                    <IconButton\n                        color={'secondary'}\n                        component={Link}\n                        to={`/categories/${tableMeta.rowData[0]}/edit`}\n                    >\n                        <EditIcon/>\n                    </IconButton>\n                )\n            }\n        }\n    }\n];\n\nconst debounceTime = 300;\nconst debouncedSearchTime = 300;\nconst rowsPerPage = 15;\nconst rowsPerPageOptions = [15, 25, 50];\nconst Table = () => {\n    const snackbar = useSnackbar();\n    const subscribed = useRef(true);\n    const [data, setData] = useState<Category[]>([]);\n    const loading = useContext(LoadingContext);\n    const tableRef = useRef() as React.MutableRefObject<MuiDataTableRefComponent>;\n\n    const {\n        columns,\n        filterManager,\n        filterState,\n        debouncedFilterState,\n        dispatch,\n        totalRecords,\n        setTotalRecords,\n    } = useFilter({\n        columns: columnsDefinition,\n        debounceTime: debounceTime,\n        rowsPerPage,\n        rowsPerPageOptions,\n        tableRef\n    });\n\n    useEffect(() => {\n        subscribed.current = true;\n        filterManager.pushHistory();\n        getData();\n        return () => {\n            subscribed.current = false;\n        }\n    }, [\n        filterManager.cleanSearchText(debouncedFilterState.search),\n        debouncedFilterState.pagination.page,\n        debouncedFilterState.pagination.per_page,\n        debouncedFilterState.order\n    ]);\n\n    async function getData() {\n       \n        try {\n            const {data} = await categoryHttp.list<ListResponse<Category>>({\n                queryParams: {\n                    search: filterManager.cleanSearchText(debouncedFilterState.search),\n                    page: debouncedFilterState.pagination.page,\n                    per_page: debouncedFilterState.pagination.per_page,\n                    sort: debouncedFilterState.order.sort,\n                    dir: debouncedFilterState.order.dir,\n                }\n            });\n            if (subscribed.current) {\n                setData(data.data);\n                setTotalRecords(data.meta.total);\n            }\n        } catch (error) {\n            console.error(error);\n            if (categoryHttp.isCancelledRequest(error)) {\n                return;\n            }\n            snackbar.enqueueSnackbar(\n                'Não foi possível carregar as informações',\n                {variant: 'error',}\n            )\n        } \n    }\n\n\n    return (\n        <MuiThemeProvider theme={makeActionStyles(columnsDefinition.length - 1)}>\n            <DefaultTable\n                title=\"\"\n                columns={columns}\n                data={data}\n                loading={loading}\n                debouncedSearchTime={debouncedSearchTime}\n                ref={tableRef}\n                options={{\n                    serverSide: true,\n                    responsive: \"scrollMaxHeight\",\n                    searchText: filterState.search as any,\n                    page: filterState.pagination.page - 1,\n                    rowsPerPage: filterState.pagination.per_page,\n                    rowsPerPageOptions,\n                    count: totalRecords,\n                    customToolbar: () => (\n                        <FilterResetButton\n                            handleClick={() => filterManager.resetFilter()}\n                        />\n                    ),\n                    onSearchChange: (value) => filterManager.changeSearch(value),\n                    onChangePage: (page) => filterManager.changePage(page),\n                    onChangeRowsPerPage: (perPage) => filterManager.changeRowsPerPage(perPage),\n                    onColumnSortChange: (changedColumn: string, direction: string) =>\n                        filterManager.changeColumnSort(changedColumn, direction)\n                    \n                }}\n            />\n        </MuiThemeProvider>\n    );\n};\n\nexport default Table;","/code-micro-videos/frontend/src/util/http/index.ts",[],"/code-micro-videos/frontend/src/pages/cast-member/PageList.tsx",[],"/code-micro-videos/frontend/src/pages/cast-member/Table.tsx",["583","584","585","586"],"import * as React from 'react';\nimport {useEffect, useState} from \"react\";\nimport format from \"date-fns/format\";\nimport parseISO from \"date-fns/parseISO\";\nimport castMemberHttp from \"../../util/http/cast-member-http\";\nimport {CastMember, CastMemberTypeMap, ListResponse} from \"../../util/models\";\nimport {IconButton, MuiThemeProvider} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DefaultTable, {makeActionStyles, TableColumn, MuiDataTableRefComponent} from '../../components/Table';\nimport {useSnackbar} from \"notistack\";\nimport {useRef} from \"react\";\nimport useFilter from \"../../hooks/useFilter\";\nimport {FilterResetButton} from \"../../components/Table/FilterResetButton\";\nimport * as yup from '../../util/vendor/yup';\nimport {invert} from 'lodash';\n\nconst castMemberNames = Object.values(CastMemberTypeMap);\n\nconst columnsDefinition: TableColumn[] = [\n    {\n        name: 'id',\n        label: 'ID',\n        width: '30%',\n        options: {\n            sort: false,\n            filter: false\n        }\n    },\n    {\n        name: \"name\",\n        label: \"Nome\",\n        width: \"43%\",\n        options: {\n            filter: false\n        }\n    },\n    {\n        name: \"type\",\n        label: \"Tipo\",\n        width: '4%',\n        options: {\n            filterOptions: {\n                names: castMemberNames\n            },\n            customBodyRender: (value, tableMeta, updateValue) => { \n                return CastMemberTypeMap[value];\n            },\n        }\n    },\n    {\n        name: \"created_at\",\n        label: \"Criado em\",\n        width: '10%',\n        options: {\n            filter: false,\n            customBodyRender(value, tableMeta, updateValue) {\n                return <span>{format(parseISO(value), 'dd/MM/yyyy')}</span>\n            }\n        }\n    },\n    {\n        name: \"actions\",\n        label: \"Ações\",\n        width: '13%',\n        options: {\n            filter: false,\n            sort: false,\n            customBodyRender: (value, tableMeta) => {\n                return (\n                    <span>\n                    <IconButton\n                        color={'secondary'}\n                        component={Link}\n                        to={`/cast-members/${tableMeta.rowData[0]}/edit`}\n                    >\n                        <EditIcon/>\n                    </IconButton>\n                </span>\n                )\n            }\n        }\n    }\n];\nconst debounceTime = 300;\nconst debouncedSearchTime = 300;\nconst rowsPerPage = 15;\nconst rowsPerPageOptions = [15, 25, 50];\nconst Table = () => {\n\n    const snackbar = useSnackbar();\n    const subscribed = useRef(true);\n    const [data, setData] = useState<CastMember[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const tableRef = useRef() as React.MutableRefObject<MuiDataTableRefComponent>;\n\n    const {\n        columns,\n        filterManager,\n        filterState,\n        debouncedFilterState,\n        dispatch,\n        totalRecords,\n        setTotalRecords,\n    } = useFilter({\n        columns: columnsDefinition,\n        debounceTime: debounceTime,\n        rowsPerPage,\n        rowsPerPageOptions,\n        tableRef,\n        extraFilter: {\n            createValidationSchema: () => {\n                return yup.object().shape({\n                    type: yup.string()\n                        .nullable()\n                        .transform(value => {\n                            return !value || !castMemberNames.includes(value) ? undefined : value;\n                        })\n                        .default(null)\n                })\n            },\n            formatSearchParams: (debouncedState) => {\n                return debouncedState.extraFilter\n                    ? {\n                        ...(\n                            debouncedState.extraFilter.type &&\n                            {type: debouncedState.extraFilter.type}\n                        ),\n                    }\n                    : undefined\n            },\n            getStateFromURL: (queryParams) => {\n                return {\n                    type: queryParams.get('type')\n                }\n            }\n        }\n    });\n    \n    const indexColumnType = columns.findIndex(c => c.name === 'type');\n    const columnType = columns[indexColumnType];\n    const typeFilterValue = filterState.extraFilter && filterState.extraFilter.type as never;\n    (columnType.options as any).filterList = typeFilterValue ? [typeFilterValue] : [];\n\n    const serverSideFilterList = columns.map(column => []);\n    if (typeFilterValue) {\n        serverSideFilterList[indexColumnType] = [typeFilterValue];\n    }\n\n    useEffect(() => {\n        subscribed.current = true;\n        filterManager.pushHistory();\n        getData();\n        return () => {\n            subscribed.current = false;\n        }\n    }, [\n        filterManager.cleanSearchText(debouncedFilterState.search),\n        debouncedFilterState.pagination.page,\n        debouncedFilterState.pagination.per_page,\n        debouncedFilterState.order,\n        JSON.stringify(debouncedFilterState.extraFilter)\n    ]);\n\n    async function getData() {\n        setLoading(true);\n        try {\n            const {data} = await castMemberHttp.list<ListResponse<CastMember>>({\n                queryParams: {\n                    search: filterManager.cleanSearchText(debouncedFilterState.search),\n                    page: debouncedFilterState.pagination.page,\n                    per_page: debouncedFilterState.pagination.per_page,\n                    sort: debouncedFilterState.order.sort,\n                    dir: debouncedFilterState.order.dir,\n                    ...(\n                        debouncedFilterState.extraFilter &&\n                        debouncedFilterState.extraFilter.type &&\n                        {type: invert(CastMemberTypeMap)[debouncedFilterState.extraFilter.type]}\n                    )\n                }\n            });\n            if (subscribed.current) {\n                setData(data.data);\n                setTotalRecords(data.meta.total);\n            }\n        } catch (error) {\n            console.error(error);\n            if (castMemberHttp.isCancelledRequest(error)) {\n                return;\n            }\n            snackbar.enqueueSnackbar(\n                'Não foi possível carregar as informações',\n                {variant: 'error',}\n            )\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <MuiThemeProvider theme={makeActionStyles(columnsDefinition.length - 1)}>\n            <DefaultTable\n                title=\"\"\n                columns={columns}\n                data={data}\n                loading={loading}\n                debouncedSearchTime={debouncedSearchTime}\n                ref={tableRef}\n                options={{\n                    serverSideFilterList,\n                    serverSide: true,\n                    responsive: \"scrollMaxHeight\",\n                    searchText: filterState.search as any,\n                    page: filterState.pagination.page - 1,\n                    rowsPerPage: filterState.pagination.per_page,\n                    rowsPerPageOptions,\n                    count: totalRecords,\n                    onFilterChange: (column, filterList, type) => {\n                        const columnIndex = columns.findIndex(c => c.name === column);\n                        \n                        filterManager.changeExtraFilter({\n                            [column]: filterList[columnIndex].length ? filterList[columnIndex][0] : null\n                        })\n                    },\n                    customToolbar: () => (\n                        <FilterResetButton\n                            handleClick={() => filterManager.resetFilter()}\n                        />\n                    ),\n                    onSearchChange: (value) => filterManager.changeSearch(value),\n                    onChangePage: (page) => filterManager.changePage(page),\n                    onChangeRowsPerPage: (perPage) => filterManager.changeRowsPerPage(perPage),\n                    onColumnSortChange: (changedColumn: string, direction: string) =>\n                        filterManager.changeColumnSort(changedColumn, direction)\n                }}\n            />\n        </MuiThemeProvider>\n    );\n};\n\nexport default Table;","/code-micro-videos/frontend/src/pages/genre/PageList.tsx",[],"/code-micro-videos/frontend/src/pages/genre/Table.tsx",["587","588","589","590","591","592","593"],"import * as React from 'react';\nimport {useEffect, useState} from \"react\";\nimport format from \"date-fns/format\";\nimport parseISO from \"date-fns/parseISO\";\nimport genreHttp from \"../../util/http/genre-http\";\nimport {Category, Genre, ListResponse} from \"../../util/models\";\nimport {IconButton, MuiThemeProvider} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DefaultTable, {makeActionStyles, TableColumn, MuiDataTableRefComponent} from \"../../components/Table\";\nimport {BadgeNo, BadgeYes} from \"../../components/Badge\";\nimport {useSnackbar} from \"notistack\";\nimport {useRef} from \"react\";\nimport useFilter from \"../../hooks/useFilter\";\nimport * as yup from \"../../util/vendor/yup\";\nimport {FilterResetButton} from \"../../components/Table/FilterResetButton\";\nimport categoryHttp from \"../../util/http/category-http\";\nimport {cloneDeep} from 'lodash';\n\nconst columnsDefinition: TableColumn[] = [\n    {\n        name: 'id',\n        label: 'ID',\n        width: '30%',\n        options: {\n            sort: false,\n            filter: false\n        }\n    },\n    {\n        name: \"name\",\n        label: \"Nome\",\n        width: \"23%\",\n        options: {\n            filter: false\n        }\n    },\n    {\n        name: \"is_active\",\n        label: \"Ativo?\",\n        options: {\n            customBodyRender(value, tableMeta, updateValue) {\n                return value ? <BadgeYes/> : <BadgeNo/>;\n            }\n        },\n        width: '4%',\n    },\n    {\n        name: \"categories\",\n        label: \"Categorias\",\n        width: '20%',\n        options: {\n            filterType: 'multiselect',\n            filterOptions: {\n                names: []\n            },\n            customBodyRender: (value, tableMeta, updateValue) => {\n                return value.map(value => value.name).join(', ');\n            }\n        }\n    },\n    {\n        name: \"created_at\",\n        label: \"Criado em\",\n        width: '10%',\n        options: {\n            filter: false,\n            customBodyRender(value, tableMeta, updateValue) {\n                return <span>{format(parseISO(value), 'dd/MM/yyyy')}</span>\n            }\n        }\n    },\n    {\n        name: \"actions\",\n        label: \"Ações\",\n        width: '13%',\n        options: {\n            filter: false,\n            sort: false,\n            customBodyRender: (value, tableMeta) => {\n                return (\n                    <span>\n                    <IconButton\n                        color={'secondary'}\n                        component={Link}\n                        to={`/genres/${tableMeta.rowData[0]}/edit`}\n                    >\n                        <EditIcon/>\n                    </IconButton>\n                </span>\n                )\n            }\n        }\n    }\n];\n\nconst debounceTime = 300;\nconst debouncedSearchTime = 300;\nconst rowsPerPage = 15;\nconst rowsPerPageOptions = [15, 25, 50];\nconst Table = () => {\n\n    const snackbar = useSnackbar();\n    const subscribed = useRef(true);\n    const [data, setData] = useState<Genre[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [categories, setCategories] = useState<Category[]>();\n    const tableRef = useRef() as React.MutableRefObject<MuiDataTableRefComponent>;\n\n    const {\n        columns,\n        filterManager,\n        filterState,\n        debouncedFilterState,\n        dispatch,\n        totalRecords,\n        setTotalRecords,\n    } = useFilter({\n        columns: columnsDefinition,\n        debounceTime: debounceTime,\n        rowsPerPage,\n        rowsPerPageOptions,\n        tableRef,\n        extraFilter: {\n            createValidationSchema: () => {\n                return yup.object().shape({\n                    categories: yup.mixed()\n                        .nullable()\n                        .transform(value => {\n                            return !value || value === '' ? undefined : value.split(',');\n                        })\n                        .default(null),\n                })\n            },\n            formatSearchParams: (debouncedState) => {\n                return debouncedState.extraFilter ? {\n                    ...(\n                        debouncedState.extraFilter.categories &&\n                        {categories: debouncedState.extraFilter.categories.join(',')}\n                    )\n                } : undefined\n            },\n            getStateFromURL: (queryParams) => {\n                return {\n                    categories: queryParams.get('categories')\n                }\n            }\n        }\n    });\n\n    const indexColumnCategories = columns.findIndex(c => c.name === 'categories');\n    const columnCategories = columns[indexColumnCategories];\n    const categoriesFilterValue = filterState.extraFilter && filterState.extraFilter.categories;\n    (columnCategories.options as any).filterList = categoriesFilterValue ? categoriesFilterValue : [];\n    const serverSideFilterList = columns.map(column => []);\n    if (categoriesFilterValue) {\n        serverSideFilterList[indexColumnCategories] = categoriesFilterValue;\n    }\n\n    useEffect(() => {\n        let isSubscribed = true;\n        (async () => {\n            try {\n                const {data} = await categoryHttp.list({queryParams: {all: ''}});\n                if (isSubscribed) {\n                    setCategories(data.data);\n                    (columnCategories.options as any).filterOptions.names = data.data.map(category => category.name)\n                }\n            } catch (error) {\n                console.error(error);\n                snackbar.enqueueSnackbar(\n                    'Não foi possível carregar as informações',\n                    {variant: 'error',}\n                )\n            }\n        })();\n\n        return () => {\n            isSubscribed = false;\n        }\n    }, []);\n\n    useEffect(() => {\n        subscribed.current = true;\n        filterManager.pushHistory();\n        getData();\n        return () => {\n            subscribed.current = false;\n        }\n    }, [\n        filterManager.cleanSearchText(debouncedFilterState.search),\n        debouncedFilterState.pagination.page,\n        debouncedFilterState.pagination.per_page,\n        debouncedFilterState.order,\n        JSON.stringify(debouncedFilterState.extraFilter)\n    ]);\n\n    async function getData() {\n        setLoading(true);\n        try {\n            const {data} = await genreHttp.list<ListResponse<Genre>>({\n                queryParams: {\n                    search: filterManager.cleanSearchText(debouncedFilterState.search),\n                    page: debouncedFilterState.pagination.page,\n                    per_page: debouncedFilterState.pagination.per_page,\n                    sort: debouncedFilterState.order.sort,\n                    dir: debouncedFilterState.order.dir,\n                    ...(\n                        debouncedFilterState.extraFilter &&\n                        debouncedFilterState.extraFilter.categories &&\n                        {categories: debouncedFilterState.extraFilter.categories.join(',')}\n                    )\n                }\n            });\n            if (subscribed.current) {\n                setData(data.data);\n                setTotalRecords(data.meta.total);\n            }\n        } catch (error) {\n            console.error(error);\n            if (genreHttp.isCancelledRequest(error)) {\n                return;\n            }\n            snackbar.enqueueSnackbar(\n                'Não foi possível carregar as informações',\n                {variant: 'error',}\n            )\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <MuiThemeProvider theme={makeActionStyles(columnsDefinition.length - 1)}>\n            <DefaultTable\n                title=\"\"\n                columns={columns}\n                data={data}\n                loading={loading}\n                debouncedSearchTime={debouncedSearchTime}\n                ref={tableRef}\n                options={{\n                    serverSideFilterList,\n                    serverSide: true,\n                    responsive: \"scrollMaxHeight\",\n                    searchText: filterState.search as any,\n                    page: filterState.pagination.page - 1,\n                    rowsPerPage: filterState.pagination.per_page,\n                    rowsPerPageOptions,\n                    count: totalRecords,\n                    onFilterChange: (column, filterList, type) => {\n                        const columnIndex = columns.findIndex(c => c.name === column);\n                        filterManager.changeExtraFilter({\n                            [column]: filterList[columnIndex].length ? filterList[columnIndex] : null\n                        })\n                    },\n                    customToolbar: () => (\n                        <FilterResetButton\n                            handleClick={() => filterManager.resetFilter()}\n                        />\n                    ),\n                    onSearchChange: (value) => filterManager.changeSearch(value),\n                    onChangePage: (page) => filterManager.changePage(page),\n                    onChangeRowsPerPage: (perPage) => filterManager.changeRowsPerPage(perPage),\n                    onColumnSortChange: (changedColumn: string, direction: string) =>\n                        filterManager.changeColumnSort(changedColumn, direction)\n                }}\n            />\n        </MuiThemeProvider>\n    );\n};\n\nexport default Table;","/code-micro-videos/frontend/src/util/http/category-http.ts",[],"/code-micro-videos/frontend/src/util/http/http-resource.ts",[],"/code-micro-videos/frontend/src/pages/category/PageForm.tsx",[],"/code-micro-videos/frontend/src/pages/category/Form.tsx",["594"],"import * as React from 'react'\nimport { useEffect, useState,useContext } from 'react'\nimport { TextField, Checkbox, FormControlLabel } from '@material-ui/core'\n\nimport {useForm} from \"react-hook-form\";\nimport categoryHttp from '../../util/http/category-http';\nimport * as yup from '../../util/vendor/yup'\nimport { useHistory, useParams } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport { Category } from '../../util/models';\nimport SubmmitActions from '../../components/SubmmitActions';\nimport { DefaultForm } from '../../components/DefaultForm'\nimport LoadingContext from '../../components/loading/LoadingContext';\n\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string()\n        .label(\"Nome\")\n        .required()\n        .max(255)\n\n});\n\nexport const Form = () => {\n\n    const { register, handleSubmit, getValues, setValue, errors, reset, watch, triggerValidation } = useForm<{\n        name,is_active\n    }>({\n\n        validationSchema: validationSchema,\n        defaultValues: {\n            is_active: true\n        }\n    });\n\n    const snackBar = useSnackbar();\n    const { id }: any = useParams();\n    const history = useHistory();\n    const [category, setCategory] = useState < Category | null > (null);\n    \n    const loading = useContext(LoadingContext);\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        if (!id) {\n            return;\n        };\n\n        if (isSubscribed) {\n\n            (async () => {\n                \n                try {\n                    const { data } = await categoryHttp.get(id);\n                    setCategory(data.data)\n                    reset(data.data);\n                } catch (error) {\n                    console.error(error);\n                    snackBar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                        variant: 'error'\n                    });\n                } \n            })();\n        }\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n\n    useEffect(() => {\n        register({ name: 'is_active' })\n\n    }, [register])\n\n    async function onSubmit(formData, event) {\n\n        try {\n            const http = !category\n                ? categoryHttp.create(formData)\n                : categoryHttp.update(category.id, formData);\n\n            const { data } = await http;\n            snackBar.enqueueSnackbar(\"Categoria salva com sucesso\", {\n                variant: 'success'\n            });\n\n            setTimeout(() => {\n\n                event ? (\n                    id ?\n                        history.replace(`/categories/${data.data.id}/edit`)\n                        :\n                        history.push(`/categories/${data.data.id}/edit`)\n                ) : history.push('/categories')\n            });\n\n        } catch (error) {\n            console.error(error);\n            snackBar.enqueueSnackbar(\"Não foi possível salvar a categoria\", {\n                variant: 'error'\n            });\n        } \n    }\n    \n\n    return (\n\n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name?.message}\n                InputLabelProps={{ shrink: true }}\n\n            />\n\n            <TextField\n                inputRef={register}\n                disabled={loading}\n                name=\"description\"\n                label=\"Descrição\"\n                multiline\n                rows=\"4\"\n                fullWidth\n                variant={\"outlined\"}\n                margin={\"normal\"}\n                InputLabelProps={{ shrink: true }}\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        color={\"primary\"}\n                        name=\"is_active\"\n                        onChange={\n                            () => setValue('is_active', !getValues()['is_active'])\n                        }\n                        checked={watch('is_active') as boolean}\n                    />\n                }\n                label={\"Ativo?\"}\n                labelPlacement={'end'}\n                disabled={loading}\n            />\n\n            <SubmmitActions disabledButtons={loading} handleSave={() => triggerValidation().then(isvalid => { isvalid && onSubmit(getValues(), null) })} />\n\n        </DefaultForm>\n    );\n};\n\n","/code-micro-videos/frontend/src/pages/cast-member/PageForm.tsx",[],"/code-micro-videos/frontend/src/pages/cast-member/Form.tsx",["595"],"import * as React from 'react';\nimport {useForm} from \"react-hook-form\";\nimport castMemberHttp from '../../util/http/cast-member-http';\nimport { useEffect, useState } from 'react'\nimport { FormControl, FormLabel, Radio, TextField, RadioGroup, FormControlLabel, FormHelperText } from '@material-ui/core';\nimport * as yup from '../../util/vendor/yup'\nimport { useHistory, useParams } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport { CastMember } from '../../util/models';\nimport SubmmitActions from '../../components/SubmmitActions';\nimport { DefaultForm } from '../../components/DefaultForm'\n\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string()\n        .label(\"Nome\")\n        .required()\n        .max(255),\n    type: yup\n        .number()\n        .label(\"Tipo\")\n        .required(),\n\n});\n\nexport const Form = () => {\n\n    const { register, handleSubmit, getValues, setValue, errors, reset, watch, triggerValidation } = useForm({\n\n        validationSchema: validationSchema,\n\n    });\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { id }: any = useParams();\n    const [castMember, setCastMember] = useState < CastMember | null > (null);\n    const [loading, setLoading] = useState < boolean > (false);\n\n\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        if (!id) {\n            return;\n        }\n\n        if (isSubscribed) {\n\n            (async () => {\n                setLoading(true);\n                try {\n                    const { data } = await castMemberHttp.get(id);\n                    setCastMember(data.data);\n                    reset(data.data);\n                } catch (error) {\n                    console.error(error);\n                    snackBar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                        variant: \"error\"\n                    });\n                } finally {\n                    setLoading(false);\n                }\n            })();\n        }\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n    useEffect(() => {\n        register({ name: \"type\" })\n\n    }, [register]);\n\n    async function onSubmit(formData, event) {\n\n        setLoading(true);\n\n        try {\n            const http = !castMember\n                ? castMemberHttp.create(formData)\n                : castMemberHttp.update(castMember.id, formData);\n            const { data } = await http;\n\n            snackBar.enqueueSnackbar(\"Membro de elenco salvo com sucesso\", {\n                variant: \"success\"\n            });\n\n            setTimeout(() => {\n\n                event ? (\n                    id ?\n                        history.replace(`/cast-members/${data.data.id}/edit`)\n                        :\n                        history.push(`/cast-members/${data.data.id}/edit`)\n                ) : history.push('/cast-members')\n            });\n\n        } catch (error) {\n            console.error(error);\n            snackBar.enqueueSnackbar(\"Não foi possível salvar o membro de elenco\", {\n                variant: \"error\"\n            });\n        } finally {\n            setLoading(false);\n        }\n\n    }\n\n    return (\n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name.message}\n                InputLabelProps={{ shrink: true }}\n            />\n\n            <FormControl\n                margin={\"normal\"}\n                error={errors.type !== undefined}\n                disabled={loading}\n            >\n                <FormLabel component=\"legend\" >Tipo</FormLabel>\n                <RadioGroup\n                    name=\"type\"\n                    onChange={(e) => {\n                        setValue(\"type\", parseInt(e.target.value));\n                    }}\n                    value={watch('type') + \"\"}\n                >\n\n                    <FormControlLabel value=\"1\" control={<Radio />} label=\"Diretor\" />\n                    <FormControlLabel value=\"2\" control={<Radio />} label=\"Ator\" />\n                </RadioGroup>\n\n                {\n                    errors.type && <FormHelperText id=\"text-helper-text\"> {errors.type.message} </FormHelperText>\n\n                }\n\n            </FormControl>\n\n            <SubmmitActions disabledButtons={loading} handleSave={() => triggerValidation().then(isvalid => { isvalid && onSubmit(getValues(), null) })} />\n\n        </DefaultForm>\n    );\n\n}","/code-micro-videos/frontend/src/util/http/cast-member-http.ts",[],"/code-micro-videos/frontend/src/routes/categoryRoutes.tsx",[],"/code-micro-videos/frontend/src/routes/genresRoutes.tsx",[],"/code-micro-videos/frontend/src/routes/castMembersRoutes.tsx",[],"/code-micro-videos/frontend/src/routes/dashboardRoutes.tsx",[],"/code-micro-videos/frontend/src/pages/genre/PageForm.tsx",[],"/code-micro-videos/frontend/src/pages/genre/Form.tsx",["596"],"import * as React from 'react';\nimport { useState } from 'react'\nimport {useForm} from \"react-hook-form\";\nimport { useEffect } from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport categoryHttp from '../../util/http/category-http';\nimport genreHttp from '../../util/http/genre-http';\nimport * as yup from '../../util/vendor/yup'\nimport { useHistory, useParams } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport { Category, Genre } from '../../util/models';\nimport SubmmitActions from '../../components/SubmmitActions';\nimport { DefaultForm } from '../../components/DefaultForm'\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string()\n        .label(\"Nome\")\n        .required()\n        .max(255),\n    categories_id: yup\n        .array()\n        .label(\"Categorias\")\n        .required(),\n\n});\n\nexport const Form = () => {\n\n    const { register, handleSubmit, getValues, setValue, watch, errors, reset, triggerValidation } = useForm<{\n        name,\n        categories_id\n    }>({\n        validationSchema,\n        defaultValues: {\n            categories_id: [] as any\n        }\n    });\n\n\n    const snackbar = useSnackbar();\n    const history = useHistory();\n    const { id }: any = useParams();\n    const [genre, setGenre] = useState < Genre | null > (null);\n    const [categories, setCategories] = useState < Category[] > ([]);\n    const [loading, setLoading] = useState < boolean > (false);\n\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        if (isSubscribed) {\n\n            (async () => {\n                setLoading(true);\n                const promises = [categoryHttp.list({queryParams:{all: ''}})];\n                if (id) {\n                    promises.push(genreHttp.get(id));\n                }\n                try {\n                    const [categoriesResponse, genreResponse] = await Promise.all(promises);\n                    setCategories(categoriesResponse.data.data);\n\n                    if (id) {\n                        setGenre(genreResponse.data.data);\n                        const categories_id = genreResponse.data.data.categories.map(category => category.id)\n                        reset({\n                            ...genreResponse.data.data,\n                            categories_id\n                        });\n                    }\n\n                } catch (error) {\n                    console.error(error);\n                    snackbar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                        variant: \"error\"\n                    })\n                } finally {\n                    setLoading(false);\n                }\n            })();\n        }\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n\n    useEffect(() => {\n        register({ name: \"categories_id\" })\n\n    }, [register]);\n\n\n\n    async function onSubmit(formData, event) {\n\n        setLoading(true);\n\n        try {\n            const http = !genre\n                ? genreHttp.create(formData)\n                : genreHttp.update(genre.id, formData);\n\n            const { data } = await http;\n\n            snackbar.enqueueSnackbar(\"Gênero salvo com sucesso!\", {\n                variant: \"success\"\n            });\n\n            setTimeout(() => {\n\n                event ? (\n                    id ?\n                        history.replace(`/genres/${data.data.id}/edit`)\n                        :\n                        history.push(`/genres/${data.data.id}/edit`)\n                ) : history.push('/genres')\n            });\n\n        } catch (error) {\n            console.error(error);\n            snackbar.enqueueSnackbar(\"Não foi possível salvar o gênero\", {\n                variant: \"error\"\n            });\n\n        } finally {\n            setLoading(false);\n        }\n\n    }\n\n    return (\n        \n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name.message}\n                InputLabelProps={{ shrink: true }}\n            />\n\n            <TextField\n                select\n                name=\"categories_id\"\n                value={watch('categories_id')}\n                label='Categorias'\n                margin={'normal'}\n                variant={'outlined'}\n                fullWidth\n                onChange={(e) => {\n                    setValue('categories_id', e.target.value);\n                }}\n\n                SelectProps={{ multiple: true }}\n                disabled={loading}\n                error={errors.categories_id !== undefined}\n                helperText={errors.categories_id && errors.categories_id.message}\n                InputLabelProps={{ shrink: true }}\n            >\n                <MenuItem value=\"\" disabled>\n                    <em>Selecione categorias</em>\n                </MenuItem>\n                {\n                    categories.map(\n                        (category, key) => (\n                            <MenuItem key={key} value={category.id} >{category.name}</MenuItem>\n                        )\n                    )\n                }\n\n            </TextField>\n\n            <SubmmitActions disabledButtons={loading} handleSave={() => triggerValidation().then(isvalid => { isvalid && onSubmit(getValues(), null) })} />\n\n        </DefaultForm>\n    );\n\n}","/code-micro-videos/frontend/src/util/http/genre-http.ts",[],"/code-micro-videos/frontend/src/theme.ts",[],"/code-micro-videos/frontend/src/components/Badge.tsx",[],"/code-micro-videos/frontend/src/util/vendor/yup.ts",["597","598","599","600"],"import {LocaleObject, setLocale} from 'yup';\n\nconst ptBR: LocaleObject = {\n    mixed: {\n        required: '${path} é requerido',\n        notType: '${path} é inválido'\n    },\n    string: {\n        max: '${path} precisa ter no máximo ${max} caracteres'\n    },\n    number: {\n        min: '${path} precisa ser no mínimo ${min}'\n    }\n};\n\nsetLocale(ptBR);\n\nexport * from 'yup';","/code-micro-videos/frontend/src/components/SnackbarProvider.tsx",[],"/code-micro-videos/frontend/src/util/models.ts",[],"/code-micro-videos/frontend/src/components/SubmmitActions.tsx",[],"/code-micro-videos/frontend/src/components/DefaultForm.tsx",[],"/code-micro-videos/frontend/src/components/Table/index.tsx",[],"/code-micro-videos/frontend/src/components/Table/FilterResetButton.tsx",[],"/code-micro-videos/frontend/src/components/Table/DebouncedTableSearch.js",[],["601","602"],"/code-micro-videos/frontend/src/store/filter/index.ts",[],"/code-micro-videos/frontend/src/hooks/useFilter.ts",["603"],"import {Dispatch, Reducer, useEffect, useReducer, useState} from \"react\";\nimport reducer, {Creators} from \"../store/filter\";\nimport {Actions as FilterActions, State as FilterState} from \"../store/filter/types\";\nimport {MUIDataTableColumn} from \"mui-datatables\";\nimport {useDebounce} from 'use-debounce';\nimport {useHistory} from 'react-router';\nimport {History} from 'history';\nimport {isEqual} from 'lodash';\nimport * as yup from '../util/vendor/yup';\nimport {MuiDataTableRefComponent} from \"../components/Table\";\n\ninterface FilterManagerOptions {\n    columns: MUIDataTableColumn[];\n    rowsPerPage: number;\n    rowsPerPageOptions: number[];\n    debounceTime: number;\n    history: History;\n    tableRef: React.MutableRefObject<MuiDataTableRefComponent>\n    extraFilter?: ExtraFilter\n}\n\ninterface ExtraFilter {\n    getStateFromURL: (queryParams: URLSearchParams) => any,\n    formatSearchParams: (debouncedState: FilterState) => any,\n    createValidationSchema: () => any,\n}\n\ninterface UseFilterOptions extends Omit<FilterManagerOptions, 'history'> {\n\n}\n\nexport default function useFilter(options: UseFilterOptions) {\n    const history = useHistory();\n    const filterManager = new FilterManager({...options, history});\n    const INITIAL_STATE = filterManager.getStateFromURL();\n    const [filterState, dispatch] = useReducer<Reducer<FilterState, FilterActions>>(reducer, INITIAL_STATE);\n    const [debouncedFilterState] = useDebounce(filterState, options.debounceTime);\n    const [totalRecords, setTotalRecords] = useState<number>(0);\n    filterManager.state = filterState;\n    filterManager.debouncedState = debouncedFilterState;\n    filterManager.dispatch = dispatch;\n\n    filterManager.applyOrderInColumns();\n\n    useEffect(() => {\n        filterManager.replaceHistory()\n    }, []);\n\n    return {\n        columns: filterManager.columns,\n        filterManager,\n        filterState,\n        debouncedFilterState,\n        dispatch,\n        totalRecords,\n        setTotalRecords\n    }\n}\n\nexport class FilterManager {\n\n    schema;\n    state: FilterState = null as any;\n    debouncedState: FilterState = null as any;\n    dispatch: Dispatch<FilterActions> = null as any;\n    columns: MUIDataTableColumn[];\n    rowsPerPage: number;\n    rowsPerPageOptions: number[];\n    history: History;\n    tableRef: React.MutableRefObject<MuiDataTableRefComponent>;\n    extraFilter?: ExtraFilter;\n\n    constructor(options: FilterManagerOptions) {\n        const {\n            columns, rowsPerPage, rowsPerPageOptions, history, tableRef, extraFilter\n        } = options;\n        this.columns = columns;\n        this.rowsPerPage = rowsPerPage;\n        this.rowsPerPageOptions = rowsPerPageOptions;\n        this.history = history;\n        this.tableRef = tableRef;\n        this.extraFilter = extraFilter;\n        this.createValidationSchema();\n    }\n\n    private resetTablePagination() {\n        this.tableRef.current.changeRowsPerPage(this.rowsPerPage);\n        this.tableRef.current.changePage(0);\n    }\n\n    changeSearch(value) {\n        this.dispatch(Creators.setSearch({search: value}));\n    }\n\n    changePage(page) {\n        this.dispatch(Creators.setPage({page: page + 1}))\n    }\n\n    changeRowsPerPage(perPage) {\n        this.dispatch(Creators.setPerPage({per_page: perPage}))\n    }\n\n    changeColumnSort(changedColumn: string, direction: string) {\n        this.dispatch(Creators.setOrder({\n                sort: changedColumn,\n                dir: direction.includes('desc') ? 'desc' : 'asc',\n            })\n        );\n        this.resetTablePagination()\n    }\n\n    changeExtraFilter(data) { \n        this.dispatch(Creators.updateExtraFilter(data));\n    }\n\n    resetFilter() {\n        const INITIAL_STATE = {\n            ...this.schema.cast({}),\n            search: {value: null, update: true}\n        };\n        this.dispatch(Creators.setReset({\n            state: INITIAL_STATE\n        }));\n        this.resetTablePagination();\n    }\n\n    applyOrderInColumns() {\n        this.columns = this.columns.map(column => {\n            return column.name === this.state.order.sort\n                ? {\n                    ...column,\n                    options: {\n                        ...column.options,\n                        sortDirection: this.state.order.dir as any\n                    }\n                }\n                : column;\n        });\n    }\n\n    cleanSearchText(text) {\n        let newText = text;\n        if (text && text.value !== undefined) {\n            newText = text.value;\n        }\n        return newText;\n    }\n\n    replaceHistory() {\n        this.history.replace({\n            pathname: this.history.location.pathname,\n            search: \"?\" + new URLSearchParams(this.formatSearchParams() as any),\n            state: this.debouncedState\n        })\n    }\n\n    pushHistory() {\n        console.log('push history');\n        const newLocation = {\n            pathname: this.history.location.pathname,\n            search: \"?\" + new URLSearchParams(this.formatSearchParams() as any),\n            state: {\n                ...this.debouncedState,\n                search: this.cleanSearchText(this.debouncedState.search)\n            }\n        };\n\n        const oldState = this.history.location.state;\n        const nextState = this.debouncedState;\n\n        if (isEqual(oldState, nextState)) {\n            console.log('isEqual');\n            return;\n        }\n\n        this.history.push(newLocation);\n    }\n\n    private formatSearchParams() {\n        const search = this.cleanSearchText(this.debouncedState.search);\n        return {\n            ...(search && search !== '' && {search: search}),\n            ...(this.debouncedState.pagination.page !== 1 && {page: this.debouncedState.pagination.page}),\n            ...(this.debouncedState.pagination.per_page !== 15 && {per_page: this.debouncedState.pagination.per_page}),\n            ...(\n                this.debouncedState.order.sort && {\n                    sort: this.debouncedState.order.sort,\n                    dir: this.debouncedState.order.dir\n                }\n            ),\n            ...(\n                this.extraFilter && this.extraFilter.formatSearchParams(this.debouncedState)\n            )\n        }\n    }\n\n\n    getStateFromURL() {\n        const queryParams = new URLSearchParams(this.history.location.search.substr(1));\n        return this.schema.cast({\n            search: queryParams.get('search'),\n            pagination: {\n                page: queryParams.get('page'),\n                per_page: queryParams.get('per_page'),\n            },\n            order: {\n                sort: queryParams.get('sort'),\n                dir: queryParams.get('dir'),\n            },\n            ...(\n                this.extraFilter && {\n                    extraFilter: this.extraFilter.getStateFromURL(queryParams)\n                }\n            )\n        })\n    }\n\n    private createValidationSchema() {\n        this.schema = yup.object().shape({\n            search: yup.string()\n                .transform(value => !value ? undefined : value)\n                .default(''),\n            pagination: yup.object().shape({\n                page: yup.number()\n                    .transform(value => isNaN(value) || parseInt(value) < 1 ? undefined : value)\n                    .default(1),\n                per_page: yup.number()\n                    .transform(value =>\n                        isNaN(value) || !this.rowsPerPageOptions.includes(parseInt(value)) ? undefined : value\n                    )\n                    .default(this.rowsPerPage),\n            }),\n            order: yup.object().shape({\n                sort: yup.string()\n                    .nullable()\n                    .transform(value => {\n                        const columnsName = this.columns\n                            .filter(column => !column.options || column.options.sort !== false)\n                            .map(column => column.name);\n                        return columnsName.includes(value) ? value : undefined;\n                    })\n                    .default(null),\n                dir: yup.string()\n                    .nullable()\n                    .transform(value => !value || !['asc', 'desc'].includes(value.toLowerCase()) ? undefined : value)\n                    .default(null),\n            }),\n            ...(\n                this.extraFilter && {\n                    extraFilter: this.extraFilter.createValidationSchema()\n                }\n            )\n        });\n    }\n}","/code-micro-videos/frontend/src/routes/videoRoutes.tsx",[],"/code-micro-videos/frontend/src/pages/video/PageForm.tsx",[],"/code-micro-videos/frontend/src/pages/video/PageList.tsx",["604"],"import * as React from 'react';\nimport {Page} from \"../../components/Page\";\nimport {Box, Fab} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Table from \"./Table\";\n\nconst PageList = () => {\n    return (\n        <Page title={'Listagem videos'}>\n            <Box dir={'rtl'} paddingBottom={2}>\n                <Fab\n                    title=\"Adicionar categoria\"\n                    color={'secondary'}\n                    size=\"small\"\n                    component={Link}\n                    to=\"/videos/create\"\n                >\n                    <AddIcon/>\n                </Fab>\n            </Box>\n            <Box>\n                <Table/>\n            </Box>\n        </Page>\n    );\n};\n\nexport default PageList;","/code-micro-videos/frontend/src/pages/video/Table.tsx",["605","606","607"],"import * as React from 'react';\nimport { useEffect,  useRef, useState } from \"react\";\nimport format from \"date-fns/format\";\nimport parseISO from \"date-fns/parseISO\";\nimport videoHttp from \"../../util/http/video-http\";\nimport { Video, ListResponse } from \"../../util/models\";\nimport DefaultTable, { makeActionStyles, TableColumn, MuiDataTableRefComponent } from '../../components/Table';\nimport { useSnackbar } from \"notistack\";\nimport { IconButton, MuiThemeProvider } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { FilterResetButton } from \"../../components/Table/FilterResetButton\";\n\nimport useFilter from \"../../hooks/useFilter\";\nimport DeleteDialog from '../../components/DeleteDialog';\n\nimport useDeleteCollection from \"../../hooks/useDeleteCollection\";\n\n\nconst columnsDefinition: TableColumn[] = [\n    {\n        name: 'id',\n        label: 'ID',\n        width: '30%',\n        options: {\n            sort: false,\n            filter: false\n        }\n    },\n    {\n        name: \"title\",\n        label: \"Título\",\n        width: '43%',\n        options: {\n            filter: false\n        }\n        ,\n    }, {\n        name: \"genres\",\n        label: \"Gêneros\",\n        width: '13%',\n        options: {\n            sort: false,\n            filter: false,\n            customBodyRender: (value, updateValue) => {\n                return value.map(v => v.name).join(', ');\n            }\n        }\n    }, {\n        name: \"categories\",\n        label: \"Categorias\",\n        width: '12%',\n        options: {\n            sort: false,\n            filter: false,\n            customBodyRender: (value, updateValue) => {\n                return value.map(v => v.name).join(', ');\n            }\n        }\n    }\n    ,\n    {\n        name: \"created_at\",\n        label: \"Criado em\",\n        width: '10%',\n        options: {\n            filter: false,\n            customBodyRender(value, tableMeta, updateValue) {\n                return <span>{format(parseISO(value), 'dd/MM/yyyy')}</span>\n            }\n        }\n    },\n    {\n        name: \"actions\",\n        label: \"Ações\",\n        width: '13%',\n        options: {\n            sort: false,\n            filter: false,\n            customBodyRender: (value, tableMeta) => {\n                return (\n                    <IconButton\n                        color={'secondary'}\n                        component={Link}\n                        to={`/videos/${tableMeta.rowData[0]}/edit`}\n                    >\n                        <EditIcon />\n                    </IconButton>\n                )\n            }\n        }\n    }\n];\n\nconst debounceTime = 300;\nconst debouncedSearchTime = 300;\nconst rowsPerPage = 15;\nconst rowsPerPageOptions = [15, 25, 50];\nconst Table = () => {\n    const snackbar = useSnackbar();\n    const subscribed = useRef(true);\n    const [data, setData] = useState < Video[] > ([]);\n    const [loading, setLoading] = useState < boolean > (false);\n    const {openDeleteDialog, setOpenDeleteDialog, rowsToDelete, setRowsToDelete} = useDeleteCollection();\n\n    const tableRef = useRef() as React.MutableRefObject<MuiDataTableRefComponent>;\n    const {\n        columns,\n        filterManager,\n        filterState,\n        debouncedFilterState,\n        dispatch,\n        totalRecords,\n        setTotalRecords,\n    } = useFilter({\n        columns: columnsDefinition,\n        debounceTime: debounceTime,\n        rowsPerPage,\n        rowsPerPageOptions,\n        tableRef\n    });\n\n    useEffect(() => {\n        subscribed.current = true;\n        filterManager.pushHistory();\n        getData();\n        return () => {\n            subscribed.current = false;\n        }\n    }, [\n        filterManager.cleanSearchText(debouncedFilterState.search),\n        debouncedFilterState.pagination.page,\n        debouncedFilterState.pagination.per_page,\n        debouncedFilterState.order\n    ]);\n\n    async function getData() {\n        setLoading(true);\n        try {\n            const { data } = await videoHttp.list < ListResponse < Video >> ({\n                queryParams: {\n                    search: filterManager.cleanSearchText(debouncedFilterState.search),\n                    page: debouncedFilterState.pagination.page,\n                    per_page: debouncedFilterState.pagination.per_page,\n                    sort: debouncedFilterState.order.sort,\n                    dir: debouncedFilterState.order.dir,\n                }\n            });\n            if (subscribed.current) {\n                setData(data.data);\n                setTotalRecords(data.meta.total);\n            }\n        } catch (error) {\n            console.error(error);\n            if (videoHttp.isCancelledRequest(error)) {\n                return;\n            }\n            snackbar.enqueueSnackbar(\n                'Não foi possível carregar as informações',\n                { variant: 'error', }\n            )\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    function deleteRows(confirmed: boolean) {\n        if (!confirmed) {\n            setOpenDeleteDialog(false);\n            return;\n        }\n        const ids = rowsToDelete\n            .data\n            .map(value => data[value.index].id)\n            .join(',');\n        videoHttp\n            .deleteCollection({ids})\n            .then(response => {\n                snackbar.enqueueSnackbar(\n                    'Registros excluídos com sucesso',\n                    {variant: 'success'}\n                );\n                if(\n                    rowsToDelete.data.length === filterState.pagination.per_page\n                    && filterState.pagination.page > 1\n                ){\n                    const page = filterState.pagination.page - 2;\n                    filterManager.changePage(page);\n                }else{\n                    getData();\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                snackbar.enqueueSnackbar(\n                    'Não foi possível excluir os registros',\n                    {variant: 'error',}\n                )\n            })\n    }\n\n\n    return (\n        <MuiThemeProvider theme={makeActionStyles(columnsDefinition.length - 1)}>\n            <DeleteDialog open={openDeleteDialog} handleClose={deleteRows} />\n            <DefaultTable\n                title=\"\"\n                columns={columns}\n                data={data}\n                loading={loading}\n                debouncedSearchTime={debouncedSearchTime}\n                ref={tableRef}\n                options={{\n                    serverSide: true,\n                    responsive: \"scrollMaxHeight\",\n                    searchText: filterState.search as any,\n                    page: filterState.pagination.page - 1,\n                    rowsPerPage: filterState.pagination.per_page,\n                    rowsPerPageOptions,\n                    count: totalRecords,\n                    customToolbar: () => (\n                        <FilterResetButton\n                            handleClick={() => filterManager.resetFilter()}\n                        />\n                    ),\n                    onSearchChange: (value) => filterManager.changeSearch(value),\n                    onChangePage: (page) => filterManager.changePage(page),\n                    onChangeRowsPerPage: (perPage) => filterManager.changeRowsPerPage(perPage),\n                    onColumnSortChange: (changedColumn: string, direction: string) =>\n                        filterManager.changeColumnSort(changedColumn, direction),\n                    onRowsDelete: (rowsDeleted: any[]) =>{\n                        setRowsToDelete(rowsDeleted as any);\n                        return false;\n                    }\n                }}\n            />\n        </MuiThemeProvider>\n    );\n};\n\nexport default Table;","/code-micro-videos/frontend/src/util/http/video-http.ts",[],"/code-micro-videos/frontend/src/components/Rating.tsx",[],"/code-micro-videos/frontend/src/pages/video/Form/Index.tsx",["608","609","610"],"import * as React from 'react';\nimport {\n\n    Checkbox,\n    FormControlLabel,\n    Grid,\n    TextField,\n    Typography,\n    useTheme,\n    Button,\n    Card,\n    CardContent,\n    makeStyles,\n    Theme\n\n} from \"@material-ui/core\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport { useEffect, useState, useRef, MutableRefObject, createRef } from \"react\";\nimport { useParams, useHistory } from \"react-router\";\nimport { useSnackbar } from \"notistack\";\n\nimport { DefaultForm } from '../../../components/DefaultForm';\nimport SubmmitActions from '../../../components/SubmmitActions';\nimport videoHttp from \"../../../util/http/video-http\";\nimport * as yup from '../../../util/vendor/yup';\nimport { Video, VideoFileFieldsMap } from \"../../../util/models\";\nimport { RatingField } from './RatingField';\nimport UploadField from './UploadField'\nimport { useMediaQuery } from '@material-ui/core';\n\nimport GenreField, { GenreFieldComponent } from \"./GenreField\";\nimport CategoryField, { CategoryFieldComponent } from \"./CategoryField\";\nimport CastMemberField, { CastMemberFieldComponent } from \"./CastMemberField\";\nimport { omit, zipObject } from 'lodash';\nimport { InputFileComponent } from \"../../../components/InputFile\";\n\nimport { FormHelperText } from '@material-ui/core';\n\nimport useSnackbarFormError from '../../../hooks/useSnackbarFormError'\nimport SnackbarUpload from '../../../components/SnackbarUpload';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    cardUpload: {\n        borderRadius: \"4px\",\n        backgroundColor: \"#f5f5f5\",\n        margin: theme.spacing(2, 0)\n    },\n    cardOpened: {\n        borderRadius: \"4px\",\n        backgroundColor: \"#f5f5f5\",\n    },\n    cardContentOpened: {\n        paddingBottom: theme.spacing(2) + 'px !important'\n    },\n}));\n\nconst validationSchema = yup.object().shape({\n    title: yup.string()\n        .label('Título')\n        .required()\n        .max(255),\n    description: yup.string()\n        .label('Sinopse')\n        .required(),\n    year_launched: yup.number()\n        .label('Ano de lançamento')\n        .required()\n        .min(1),\n    duration: yup.number()\n        .label('Duração')\n        .required()\n        .min(1),\n    cast_members: yup.array()\n        .label('Elenco')\n        .required(),\n    genres: yup.array()\n        .label('Gêneros')\n        .required(),\n    categories: yup.array()\n        .label('Categorias')\n        .required()\n        .test({\n            message: 'Cada gênero escolhido precisa ter pelo menos uma categoria selecionada',\n            test(value) {\n                return value.every(\n                    v => v.categories.filter(\n                        cat => this.parent.categories.map(c => c.id).includes(cat.id)\n                    ).length !== 0\n                );\n            }\n        }),\n    rating: yup.string()\n        .label('Classificação')\n        .required()\n});\n\nconst fileFields = Object.keys(VideoFileFieldsMap);\n\nexport const Form = () => {\n    const {\n        register,\n        handleSubmit,\n        getValues,\n        setValue,\n        errors,\n        reset,\n        watch,\n        triggerValidation,\n        formState\n    } = useForm < {\n        title,\n        description,\n        year_launched,\n        duration,\n        thumb_file,\n        banner_file,\n        trailer_file,\n        video_file,\n        opened,\n        genres,\n        rating,\n        categories,\n        cast_members\n    } > ({\n        validationSchema,\n        defaultValues: {\n            genres: [],\n            categories: [],\n            cast_members: [],\n            opened: false,\n            rating: null\n        }\n    });\n\n\n\n    const snackbar = useSnackbar();\n    const classes = useStyles();\n    const history = useHistory();\n    const { id }: any = useParams();\n    const [video, setVideo] = useState < Video | null > (null);\n    const [loading, setLoading] = useState < boolean > (false);\n\n    const theme = useTheme();\n    const isGreaterMd = useMediaQuery(theme.breakpoints.up('md'));\n\n    const castMemberRef = useRef() as MutableRefObject<CastMemberFieldComponent>;\n    const genreRef = useRef() as MutableRefObject<GenreFieldComponent>;\n    const categoryRef = useRef() as MutableRefObject<CategoryFieldComponent>;\n    const uploadsRef = useRef(\n        zipObject(fileFields, fileFields.map(() => createRef()))\n    ) as MutableRefObject<{ [key: string]: MutableRefObject<InputFileComponent> }>;\n\n\n    useSnackbarFormError(formState.submitCount, errors);\n\n    useEffect(() => {\n\n    }, [formState.submitCount])\n\n    useEffect(() => {\n        ['rating',\n            'opened',\n            'genres',\n            'categories',\n            ...fileFields].forEach(name => register({ name }));\n    }, [register])\n\n\n    useEffect(() => {\n        snackbar.enqueueSnackbar('', {\n            key: 'snackbar-upload',\n            persist: true,\n            anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right'\n            },\n            content: (key, message) => {\n                const id = key as any\n                return <SnackbarUpload id={id} />\n            }\n        })\n\n        if (!id) {\n            return;\n        }\n\n        let isSubscribed = true;\n\n        (async () => {\n            setLoading(true);\n            try {\n                const { data } = await videoHttp.get(id);\n                if (isSubscribed) {\n                    setVideo(data.data);\n                    resetForm(data.data);\n                }\n            } catch (error) {\n                console.error(error);\n                snackbar.enqueueSnackbar('Não foi possível carregar as informações', { variant: 'error' });\n            } finally {\n                setLoading(false);\n            }\n        })();\n        return () => {\n            isSubscribed = false;\n        }\n    }, []);\n\n    async function onSubmit(formData, event) {\n\n        const sendData = omit(formData, ['cast_members', 'genres', 'categories']);\n        sendData['cast_members_id'] = formData['cast_members'].map(cast_member => cast_member.id);\n        sendData['categories_id'] = formData['categories'].map(category => category.id);\n        sendData['genres_id'] = formData['genres'].map(genre => genre.id);\n\n        setLoading(true);\n        try {\n            const http = !video\n                ? videoHttp.create(sendData)\n                : videoHttp.update(video.id, { ...sendData, _method: 'PUT' }, { http: { usePost: true } });\n            const { data } = await http;\n\n            snackbar.enqueueSnackbar('Vídeo salvo com sucesso', { variant: 'success' });\n\n            id && resetForm(video);\n\n            setTimeout(() => {\n                event ?\n                    (\n                        id\n                            ? history.replace(`/videos/${data.data.id}/edit`)\n                            : history.push(`/videos/${data.data.id}/edit`)\n\n\n                    ) : history.push('/videos')\n            });\n\n        } catch (error) {\n            console.error(error);\n            snackbar.enqueueSnackbar('Não foi possível salvar o vídeo', { variant: 'error' });\n        } finally {\n            setLoading(false);\n        }\n    }\n\n\n    function resetForm(data) {\n        Object.keys(uploadsRef.current).forEach(\n            field => uploadsRef.current[field].current.clear()\n        );\n        castMemberRef.current.clear();\n        genreRef.current.clear();\n        categoryRef.current.clear();\n        //reset(data);\n    }\n\n    return (\n        <DefaultForm\n            GridItemProps={{ xs: 12 }}\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <Grid container spacing={5}>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        name=\"title\"\n                        label=\"Título\"\n                        variant={'outlined'}\n                        fullWidth\n                        inputRef={register}\n                        disabled={loading}\n                        InputLabelProps={{ shrink: true }}\n                        error={errors.title !== undefined}\n                        helperText={errors.title && errors.title.message}\n                    />\n                    <TextField\n                        name=\"description\"\n                        label=\"Sinopse\"\n                        multiline\n                        rows=\"4\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        fullWidth\n                        inputRef={register}\n                        disabled={loading}\n                        InputLabelProps={{ shrink: true }}\n                        error={errors.description !== undefined}\n                        helperText={errors.description && errors.description.message}\n                    />\n                    <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                            <TextField\n                                name=\"year_launched\"\n                                label=\"Ano de lançamento\"\n                                type=\"number\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                fullWidth\n                                inputRef={register}\n                                disabled={loading}\n                                InputLabelProps={{ shrink: true }}\n                                error={errors.year_launched !== undefined}\n                                helperText={errors.year_launched && errors.year_launched.message}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField\n                                name=\"duration\"\n                                label=\"Duração\"\n                                type=\"number\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                fullWidth\n                                inputRef={register}\n                                disabled={loading}\n                                InputLabelProps={{ shrink: true }}\n                                error={errors.duration !== undefined}\n                                helperText={errors.duration && errors.duration.message}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <CastMemberField\n                        ref={castMemberRef}\n                        castMembers={watch('cast_members')}\n                        error={errors.genres}\n                        disabled={loading}\n                        setCastMembers={(value) => setValue('cast_members', value, true)}\n                    />\n\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <GenreField\n                                ref={genreRef}\n                                error={errors.genres}\n                                disabled={loading}\n                                genres={watch('genres')}\n                                setGenres={(value) => setValue('genres', value, true)}\n                                setCategories={(value) => setValue('categories', value, true)}\n                                categories={watch('categories')}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <CategoryField\n                                ref={categoryRef}\n                                error={errors.categories}\n                                disabled={loading}\n                                categories={watch('categories')}\n                                setCategories={(value) => setValue('categories', value, true)}\n                                genres={watch('genres')}\n\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <FormHelperText>\n                                Escolha os gêneros dos vídeos\n                            </FormHelperText>\n                            <FormHelperText>\n                                Escolha pelo menos uma categoria de cada gênero\n                            </FormHelperText>\n                        </Grid>\n\n                    </Grid>\n\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <RatingField\n                        value={watch('rating')}\n                        setValue={(value) => setValue('rating', value, true)}\n                        error={errors.rating}\n                        disabled={loading}\n                        FormControlProps={{\n                            margin: isGreaterMd ? 'none' : 'normal'\n                        }}\n                    />\n                    <br />\n                    <Card className={classes.cardUpload}>\n                        <CardContent>\n                            <Typography color=\"primary\" variant=\"h6\">\n                                Imagens\n                            </Typography>\n\n                            <UploadField\n                                ref={uploadsRef.current['thumb_file']}\n                                accept={'image/*'}\n                                label={'Thumb'}\n                                setValue={(value) => setValue('thumb_file', value)} />\n\n                            <UploadField\n                                ref={uploadsRef.current['banner_file']}\n\n                                accept={'image/*'}\n                                label={'Banner'}\n                                setValue={(value) => setValue('banner_file', value)} />\n\n                        </CardContent>\n                    </Card>\n\n                    <Card className={classes.cardUpload}>\n                        <CardContent>\n                            <Typography color=\"primary\" variant=\"h6\">\n                                Videos\n                            </Typography>\n\n                            <UploadField\n                                ref={uploadsRef.current['trailer_file']}\n                                accept={'video/mp4'}\n                                label={'Trailer'}\n                                setValue={(value) => setValue('trailer_file', value)} />\n\n                            <UploadField\n                                ref={uploadsRef.current['video_file']}\n                                accept={'video/mp4'}\n                                label={'Principal'}\n                                setValue={(value) => setValue('video_file', value)} />\n\n                        </CardContent>\n                    </Card>\n\n                    <Card className={classes.cardOpened}>\n                        <CardContent className={classes.cardContentOpened}>\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        name=\"opened\"\n                                        color={'primary'}\n                                        onChange={\n                                            () => setValue('opened', !getValues()['opened'])\n                                        }\n                                        checked={watch('opened') as boolean}\n                                        disabled={loading} />\n                                }\n                                label={\n                                    <Typography color={'primary'} variant={'subtitle2'} >\n                                        Quero que esse conteúdo apareça na seção de lançamentos\n                                    </Typography>\n                                }\n                                labelPlacement=\"end\"\n                            />\n                        </CardContent>\n\n                    </Card>\n\n                </Grid>\n\n            </Grid>\n            <SubmmitActions\n                disabledButtons={loading}\n                handleSave={() =>\n                    triggerValidation().then(isValid => {\n                        isValid && onSubmit(getValues(), null)\n                    })\n                }\n            />\n        </DefaultForm>\n    )\n}","/code-micro-videos/frontend/src/pages/video/Form/RatingField.tsx",[],"/code-micro-videos/frontend/src/components/InputFile.tsx",[],"/code-micro-videos/frontend/src/pages/video/Form/UploadField.tsx",[],"/code-micro-videos/frontend/src/components/AsyncAutoComplete.tsx",["611","612","613","614","615","616","617"],"import * as React from 'react';\nimport { Autocomplete, AutocompleteProps, UseAutocompleteSingleProps } from '@material-ui/lab';\nimport { CircularProgress, TextFieldProps } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { useState, useEffect,useImperativeHandle , RefAttributes} from 'react';\n\nimport { useDebounce } from 'use-debounce/lib';\n\ninterface AsyncAutocompleteProps extends RefAttributes<AsyncAutocompleteComponent> {\n  fetchOptions: (searchText) => Promise<any>\n  debounceTime?: number\n  TextFieldsProps?: TextFieldProps\n  AutocompleteProps?: Omit<AutocompleteProps<any>, 'renderInput'> & UseAutocompleteSingleProps<any>;\n\n};\n\nexport interface AsyncAutocompleteComponent {\n  clear: () => void;\n}\n\nconst AsyncAutocomplete = React.forwardRef<AsyncAutocompleteComponent, AsyncAutocompleteProps>((props, ref) => {\n\n\n  const { AutocompleteProps, debounceTime = 300 } = props;\n  const { freeSolo = false, onOpen, onClose, onInputChange } = AutocompleteProps as any;\n\n  const [open, setOpen] = useState(false);\n  const [searchText, setsearchText] = useState(\"\");\n  const [debouncedSearchText] = useDebounce(searchText, debounceTime);\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const textFieldsProps: TextFieldProps = {\n    margin: 'normal',\n    variant: 'outlined',\n    fullWidth: true,\n    InputLabelProps: { shrink: true },\n    ...(props.TextFieldsProps && { ...props.TextFieldsProps })\n  }\n\n  const autoCompleteProps: AutocompleteProps<any> = {\n    ...(AutocompleteProps && { ...AutocompleteProps }),\n    open,\n    loading: loading,\n    options,\n    loadingText: 'Carregando...',\n    noOptionsText: 'Nenhum item encontrado',\n    inputValue: searchText,\n    onOpen() {\n      setOpen(true);\n      onOpen && onOpen();\n    },\n    onClose() {\n      setOpen(false);\n      onClose && onClose();\n\n    },\n    onInputChange(event, value) {\n      setsearchText(value);\n      onInputChange && onInputChange();\n    },\n    renderInput: params => (\n      <TextField\n        {...params}\n        {...textFieldsProps}\n        InputProps={{\n          ...params.InputProps,\n          endAdornment: (\n            <>\n              {loading && <CircularProgress color={\"inherit\"} size={20} />}\n              {params.InputProps.endAdornment}\n            </>\n          )\n        }}\n      />\n    )\n  }\n\n  useEffect(() => {\n\n\n    if (!open || debouncedSearchText === \"\" && freeSolo) {\n      setOptions([]);\n    }\n\n  }, [open])\n\n  useEffect(() => {\n\n    if (!open || debouncedSearchText === \"\" && freeSolo) {\n      return;\n    }\n\n    let isSubscribed = true;\n\n    (async () => {\n      setLoading(true);\n      try {\n\n        const data = await props.fetchOptions(debouncedSearchText);\n        if (isSubscribed) {\n          setOptions(data)\n        }\n\n      } finally {\n        setLoading(false);\n      }\n    })();\n\n\n    return () => {\n      isSubscribed = false;\n    };\n\n  }, [freeSolo ? debouncedSearchText : open]);\n\n  useImperativeHandle(ref,()=>({\n      clear: ()=> {\n        setsearchText(\"\");\n        setOptions([]);\n      }\n  }));\n\n\n  return (\n    <Autocomplete {...autoCompleteProps} />\n  );\n});\n\nexport default AsyncAutocomplete;","/code-micro-videos/frontend/src/components/GridSelectedItem.tsx",[],"/code-micro-videos/frontend/src/components/GridSelected.tsx",[],"/code-micro-videos/frontend/src/hooks/useHttpHandled.ts",[],"/code-micro-videos/frontend/src/pages/video/Form/GenreField.tsx",["618","619"],"import * as React from 'react';\nimport {RefAttributes, useImperativeHandle,useRef, MutableRefObject} from \"react\";\n\nimport { FormControl, FormControlProps, FormHelperText, Typography } from '@material-ui/core'\nimport AsyncAutocomplete, {AsyncAutocompleteComponent}  from '../../../components/AsyncAutoComplete';\nimport GridSelected from \"../../../components/GridSelected\";\nimport GridSelectedItem from \"../../../components/GridSelectedItem\";\nimport genreHttp from '../../../util/http/genre-http';\n\nimport useHttpHandled from '../../../hooks/useHttpHandled';\nimport useCollectionManager from '../../../hooks/useCollectionManager';\nimport { getGenresFromCategory } from '../../../util/model-filters';\n\n\n\ninterface GenreFieldProps {\n    genres: any[],\n    setGenres: (genres) => void\n    categories: any[],\n    setCategories: (categories) => void\n    error: any\n    disabled?: boolean;\n    FormControlProps?: FormControlProps\n}\n\nexport interface GenreFieldComponent {\n    clear: () => void\n}\n\nconst GenreField = React.forwardRef<GenreFieldComponent, GenreFieldProps>((props, ref) => {\n\n    const { genres,\n        setGenres,\n        categories,\n        setCategories,\n        error,\n        disabled } = props;\n    const autocompleteHttp = useHttpHandled();\n\n\n    const { addItem, removeItem } = useCollectionManager(genres, setGenres);\n    const { removeItem: removeCategory } = useCollectionManager(categories, setCategories);\n    const autocompleteRef = useRef() as MutableRefObject<AsyncAutocompleteComponent>;\n\n    function fetchOptions(searchText) {\n        return autocompleteHttp(\n\n            genreHttp.list(\n                {\n                    queryParams: {\n                        search: searchText,\n                        all: \"\"\n                    }\n                }\n            )\n        ).then(data => data.data);\n    }\n\n    useImperativeHandle(ref, () => ({\n        clear: () => autocompleteRef.current.clear()\n    }));\n\n    return (\n\n        <>\n            <AsyncAutocomplete\n                ref={autocompleteRef}\n                fetchOptions={fetchOptions}\n                AutocompleteProps={{\n                    // autoSelect: true,\n                    getOptionSelected: (option, value) => option.id === value.id,\n                    clearOnEscape: true,\n                    freeSolo: true,\n                    getOptionLabel: option => option.name,\n                    onChange: (event, value) => addItem(value),\n                    disabled: disabled\n                }}\n                TextFieldsProps={{\n                    label: 'Gêneros',\n                    error: error !== undefined\n                }}\n            />\n            <FormControl\n                error={error !== undefined}\n                disabled={disabled === true}\n                {...props.FormControlProps}\n                fullWidth\n                margin={\"normal\"}\n            >\n                <GridSelected>\n                    {\n                        genres.map((genre, key) =>\n                        (<GridSelectedItem\n                            key={key} xs={12}\n                            onDelete={() => {\n                                const categoriesWithOneGenre = categories\n                                    .filter(category => {\n                                        const genresFromCategory = getGenresFromCategory(genres, category);\n                                        return genresFromCategory.length === 1 && genres[0].id == genre.id\n                                    });\n\n                                categoriesWithOneGenre.forEach(cat => removeCategory(cat));\n                                removeItem(genre);\n                            }}>\n                            <Typography noWrap={true} >\n                                {genre.name}\n                            </Typography>\n                        </GridSelectedItem>\n                        ))\n                    }\n                </GridSelected>\n                {\n                    error && <FormHelperText> {error.message} </FormHelperText>\n                }\n\n            </FormControl>\n\n        </>\n    );\n});\n\n\nexport default GenreField;","/code-micro-videos/frontend/src/pages/video/Form/CategoryField.tsx",["620"],"import * as React from 'react';\nimport {RefAttributes, useImperativeHandle,useRef, MutableRefObject} from \"react\";\n\nimport { createStyles, FormControl, FormControlProps, FormHelperText, Typography, Theme, makeStyles } from '@material-ui/core'\nimport AsyncAutocomplete, {AsyncAutocompleteComponent}  from '../../../components/AsyncAutoComplete';\nimport GridSelected from '../../../components/GridSelected';\nimport GridSelectedItem from '../../../components/GridSelectedItem';\n\nimport useHttpHandled from '../../../hooks/useHttpHandled';\nimport useCollectionManager from '../../../hooks/useCollectionManager';\nimport categoryHttp from '../../../util/http/category-http';\nimport { Genre } from '../../../util/models';\nimport { getGenresFromCategory } from '../../../util/model-filters';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme)=> ({\n    genresSubtitle: {\n        color: grey[\"800\"],\n        fontSize: '0.8rem'\n    }\n}) );\n\n\ninterface CategoryFieldProps extends RefAttributes<CategoryFieldComponent>{\n    categories: any[],\n    setCategories: (categories) => void\n    genres: Genre[]\n    error: any\n    disabled?: boolean;\n    FormControlProps?: FormControlProps\n}\n\nexport interface CategoryFieldComponent{\n    clear: () => void\n}\n\n\nconst CategoryField = React.forwardRef<CategoryFieldComponent, CategoryFieldProps>((props, ref) => {\n\n\n    const { categories, setCategories, genres, error, disabled } = props;\n    const classes = useStyles();\n    const autocompleteHttp = useHttpHandled();\n\n    const { addItem, removeItem } = useCollectionManager(categories, setCategories);\n    \n    const autocompleteRef = useRef() as MutableRefObject<AsyncAutocompleteComponent>;\n\n    function fetchOptions(searchText) {\n\n        return autocompleteHttp(\n\n            categoryHttp.list(\n                {\n                    queryParams: {\n                        genres: genres.map(genre => genre.id).join(','),\n                        all: \"\"\n                    }\n                }\n            )\n        ).then(data => data.data);\n    }\n\n    useImperativeHandle(ref, () => ({\n        clear: () => autocompleteRef.current.clear()\n    }));\n\n\n    return (\n        <>\n            <AsyncAutocomplete\n                fetchOptions={fetchOptions}\n                ref={autocompleteRef}\n\n                AutocompleteProps={{\n                    getOptionSelected: (option, value) => option.id === value.id,\n                    clearOnEscape: true,\n                    getOptionLabel: option => option.name,\n                    onChange: (event, value) => addItem(value),\n                    disabled: disabled === true || !genres.length,\n\n                }}\n                TextFieldsProps={{\n                    label: 'Categorias',\n                    error: error !== undefined,\n\n                }}\n            />\n\n            <FormControl\n                error={error !== undefined}\n                disabled={disabled === true}\n                {...props.FormControlProps}\n                fullWidth\n                margin={\"normal\"}\n            >\n                <GridSelected>\n                    {\n                        categories.map((category, key) => {\n                            const genresFromCategory = getGenresFromCategory(genres, category)\n                                    .map(genre => genre.name).join(',');\n                            return (\n                                <GridSelectedItem\n                                    key={key}\n                                    xs={12}\n                                    onDelete={() => removeItem(category)}>\n\n                                    <Typography noWrap={true} >\n                                        {category.name}\n                                    </Typography>\n\n                                    <Typography noWrap={true} className={classes.genresSubtitle} >\n                                        Gêneros: {genresFromCategory}\n                                    </Typography>\n\n                                </GridSelectedItem>)\n                        })\n                    }\n                </GridSelected>\n\n\n                {\n                    error && <FormHelperText> {error.message} </FormHelperText>\n\n                }\n\n            </FormControl>\n\n        </>\n    );\n});\n\n\nexport default CategoryField;","/code-micro-videos/frontend/src/hooks/useCollectionManager.ts",[],"/code-micro-videos/frontend/src/util/model-filters.ts",[],"/code-micro-videos/frontend/src/pages/video/Form/CastMemberField.tsx",["621"],"// @flow\nimport * as React from 'react';\nimport AsyncAutocomplete, {AsyncAutocompleteComponent}  from '../../../components/AsyncAutoComplete';\nimport GridSelected from \"../../../components/GridSelected\";\nimport GridSelectedItem from \"../../../components/GridSelectedItem\";\nimport {FormControl, FormControlProps, FormHelperText, Grid, Typography} from \"@material-ui/core\";\nimport useHttpHandled from \"../../../hooks/useHttpHandled\";\nimport useCollectionManager from \"../../../hooks/useCollectionManager\";\nimport castMemberHttp from \"../../../util/http/cast-member-http\";\nimport {MutableRefObject, RefAttributes, useRef} from \"react\";\nimport {useImperativeHandle} from \"react\";\n\ninterface CastMemberFieldProps extends RefAttributes<CastMemberFieldProps>{\n    castMembers: any[],\n    setCastMembers: (castMembers) => void\n    error: any\n    disabled?: boolean;\n    FormControlProps?: FormControlProps\n}\n\nexport interface CastMemberFieldComponent {\n    clear: () => void\n}\n\nconst CastMemberField = React.forwardRef<CastMemberFieldComponent, CastMemberFieldProps>((props, ref) => {\n    const {\n        castMembers,\n        setCastMembers,\n        error,\n        disabled\n    } = props;\n    const autocompleteHttp = useHttpHandled();\n    const {addItem, removeItem} = useCollectionManager(castMembers, setCastMembers);\n    const autocompleteRef = useRef() as MutableRefObject<AsyncAutocompleteComponent>;\n\n    function fetchOptions(searchText) {\n        return autocompleteHttp(\n            castMemberHttp\n                .list({\n                    queryParams: {\n                        search: searchText, all: \"\"\n                    }\n                })\n        ).then(data => data.data)\n    }\n\n    useImperativeHandle(ref, () => ({\n        clear: () => autocompleteRef.current.clear()\n    }));\n\n    return (\n        <>\n            <AsyncAutocomplete\n                ref={autocompleteRef}\n                fetchOptions={fetchOptions}\n                AutocompleteProps={{\n                    //autoSelect: true,\n                    clearOnEscape: true,\n                    freeSolo: true,\n                    getOptionLabel: option => option.name,\n                    getOptionSelected: (option, value) => option.id === value.id,\n                    onChange: (event, value) => addItem(value),\n                    disabled\n                }}\n                TextFieldsProps={{\n                    label: 'Elenco',\n                    error: error !== undefined\n                }}\n            />\n            <FormControl\n                margin={\"normal\"}\n                fullWidth\n                error={error !== undefined}\n                disabled={disabled === true}\n                {...props.FormControlProps}\n            >\n                <GridSelected>\n                    {\n                        castMembers.map((castMember, key) => (\n                            <GridSelectedItem\n                                key={key}\n                                onDelete={() => {\n                                    removeItem(castMember)\n                                }}\n                                xs={6}>\n                                <Typography noWrap={true}>\n                                    {castMember.name}\n                                </Typography>\n                            </GridSelectedItem>\n                        ))\n                    }\n                </GridSelected>\n                {\n                    error && <FormHelperText>{error.message}</FormHelperText>\n                }\n            </FormControl>\n        </>\n    );\n});\n\nexport default CastMemberField;","/code-micro-videos/frontend/src/hooks/useSnackbarFormError.ts",["622"],"import { useSnackbar } from \"notistack\";\nimport { useEffect } from \"react\";\n\nconst useSnackbarFormError = (submitCount,errors) => {\n    const snackbar = useSnackbar();\n\n    useEffect(()=>{\n        const hasError = Object.keys(errors).length !==0;\n\n        if(submitCount > 0 && hasError ){\n            snackbar.enqueueSnackbar('Formulário inválido. Revise os campos destacados em vermelho',{variant:'error'})\n        }\n        \n    },[submitCount] );\n\n}\n\nexport default useSnackbarFormError;","/var/www/frontend/src/theme.ts",[],"/var/www/frontend/src/components/Breadcrumbs.tsx",[],"/var/www/frontend/src/components/SnackbarProvider.tsx",[],"/var/www/frontend/src/routes/AppRouter.tsx",[],"/var/www/frontend/src/routes/index.tsx",[],"/var/www/frontend/src/components/Navbar/Menu.tsx",[],"/var/www/frontend/src/routes/dashboardRoutes.tsx",[],"/var/www/frontend/src/routes/castMembersRoutes.tsx",[],"/var/www/frontend/src/pages/Dashboard.tsx",[],"/var/www/frontend/src/pages/cast-member/PageForm.tsx",[],"/var/www/frontend/src/components/Page.tsx",[],"/var/www/frontend/src/pages/cast-member/Form.tsx",["623"],"/var/www/frontend/src/components/DefaultForm.tsx",[],"/var/www/frontend/src/components/SubmmitActions.tsx",[],"/var/www/frontend/src/util/vendor/yup.ts",["624","625","626","627"],"/var/www/frontend/src/util/http/cast-member-http.ts",[],"/var/www/frontend/src/pages/cast-member/PageList.tsx",[],"/var/www/frontend/src/routes/genresRoutes.tsx",[],"/var/www/frontend/src/routes/videoRoutes.tsx",[],"/var/www/frontend/src/routes/categoryRoutes.tsx",[],"/var/www/frontend/src/util/http/index.ts",[],"/var/www/frontend/src/pages/cast-member/Table.tsx",["628","629","630","631"],"/var/www/frontend/src/pages/genre/PageForm.tsx",[],"/var/www/frontend/src/pages/video/PageForm.tsx",[],"/var/www/frontend/src/pages/category/PageForm.tsx",[],"/var/www/frontend/src/pages/category/PageList.tsx",[],"/var/www/frontend/src/util/http/http-resource.ts",[],"/var/www/frontend/src/pages/video/PageList.tsx",[],"/var/www/frontend/src/pages/genre/PageList.tsx",[],"/var/www/frontend/src/util/models.ts",[],"/var/www/frontend/src/hooks/useFilter.ts",["632"],"/var/www/frontend/src/components/Table/FilterResetButton.tsx",[],"/var/www/frontend/src/pages/video/Table.tsx",["633","634","635","636","637","638","639","640","641","642"],"/var/www/frontend/src/pages/genre/Table.tsx",["643","644","645","646","647","648","649"],"/var/www/frontend/src/pages/category/Table.tsx",["650","651","652","653","654","655","656","657"],"/var/www/frontend/src/pages/category/Form.tsx",["658"],"/var/www/frontend/src/pages/genre/Form.tsx",["659"],"/var/www/frontend/src/pages/video/Form/Index.tsx",["660","661","662"],"/var/www/frontend/src/components/Table/index.tsx",[],"/var/www/frontend/src/util/http/video-http.ts",[],"/var/www/frontend/src/util/http/genre-http.ts",[],"/var/www/frontend/src/util/http/category-http.ts",[],"/var/www/frontend/src/components/Badge.tsx",[],"/var/www/frontend/src/hooks/useSnackbarFormError.ts",["663"],"/var/www/frontend/src/components/Table/DebouncedTableSearch.js",[],"/var/www/frontend/src/pages/video/Form/RatingField.tsx",[],"/var/www/frontend/src/pages/video/Form/UploadField.tsx",[],"/var/www/frontend/src/pages/video/Form/GenreField.tsx",["664","665"],"/var/www/frontend/src/pages/video/Form/CategoryField.tsx",["666"],"/var/www/frontend/src/pages/video/Form/CastMemberField.tsx",["667"],"/var/www/frontend/src/store/filter/index.ts",[],"/var/www/frontend/src/hooks/useHttpHandled.ts",[],"/var/www/frontend/src/hooks/useCollectionManager.ts",[],"/var/www/frontend/src/util/model-filters.ts",[],"/var/www/frontend/src/components/Rating.tsx",[],"/var/www/frontend/src/components/InputFile.tsx",[],"/var/www/frontend/src/components/GridSelected.tsx",[],"/var/www/frontend/src/components/AsyncAutoComplete.tsx",["668","669","670","671","672","673","674"],"/var/www/frontend/src/components/GridSelectedItem.tsx",[],"/code-micro-videos/frontend/src/components/DeleteDialog.tsx",[],"/code-micro-videos/frontend/src/hooks/useDeleteCollection.ts",[],"/code-micro-videos/frontend/src/components/Spinner.tsx",[],"/code-micro-videos/frontend/src/components/loading/LoadingContext.tsx",[],"/code-micro-videos/frontend/src/components/loading/LoadingProvider.tsx",["675"],"// @flow \nimport * as React from 'react';\nimport LoadingContext from './LoadingContext';\nimport { useState } from 'react';\nimport { addGlobalRequestInterceptor, addGlobalResponseInterceptor, removeGlobalRequestInterceptor, removeGlobalResponseInterceptor } from '../../util/http';\nimport { useMemo } from 'react';\nimport { useEffect } from 'react';\n\nexport const LoadingProvider = (props) => {\n    const [loading, setLoading] = useState < boolean > (false);\n    const [countRequest,setCountRequest] = useState(0);\n\n    \n\n    useMemo(() => {\n\n        let isSubscribed = true;\n\n        const requestIds = addGlobalRequestInterceptor((config) => {\n\n            if (isSubscribed) {\n                setLoading(true);\n                setCountRequest((prevCountRequest) => prevCountRequest+1);\n            }\n\n            return config;\n        });\n\n        const responseIds = addGlobalResponseInterceptor((response) => {\n\n            if (isSubscribed) {\n                \n                decrementCountRequest();\n            }\n\n            return response;\n        }, (error) => {\n\n            if (isSubscribed) {\n                \n                decrementCountRequest();\n            }\n            return Promise.reject(error);\n        });\n\n        return () => {\n            isSubscribed = false;\n            removeGlobalResponseInterceptor(responseIds);\n            removeGlobalRequestInterceptor(requestIds);\n        }\n\n    }, [true]);\n\n    useEffect(()=>{\n        if(!countRequest){\n            setLoading(false);\n        }\n\n    },[countRequest])\n\n    function decrementCountRequest(){\n        setCountRequest((prevCountRequest) => prevCountRequest-1);        \n    }\n\n    return (\n        <LoadingContext.Provider value={loading}>\n            {props.children}\n        </LoadingContext.Provider>\n    );\n};","/code-micro-videos/frontend/src/components/SnackbarUpload/index.tsx",[],"/code-micro-videos/frontend/src/components/SnackbarUpload/UploadItem.tsx",[],"/code-micro-videos/frontend/src/components/UploadProgress.tsx",[],"/code-micro-videos/frontend/src/routes/uploadRoutes.tsx",[],"/code-micro-videos/frontend/src/pages/uploads/index.tsx",[],"/code-micro-videos/frontend/src/pages/uploads/UploadItem.tsx",[],"/code-micro-videos/frontend/src/pages/uploads/UploadAction.tsx",[],{"ruleId":"676","replacedBy":"677"},{"ruleId":"678","replacedBy":"679"},{"ruleId":"676","replacedBy":"680"},{"ruleId":"678","replacedBy":"681"},{"ruleId":"682","severity":1,"message":"683","line":10,"column":39,"nodeType":"684","messageId":"685","endLine":10,"endColumn":44},{"ruleId":"682","severity":1,"message":"686","line":99,"column":9,"nodeType":"684","messageId":"685","endLine":99,"endColumn":17},{"ruleId":"687","severity":1,"message":"688","line":117,"column":8,"nodeType":"689","endLine":122,"endColumn":6,"suggestions":"690"},{"ruleId":"687","severity":1,"message":"691","line":118,"column":9,"nodeType":"692","endLine":118,"endColumn":67},{"ruleId":"682","severity":1,"message":"686","line":102,"column":9,"nodeType":"684","messageId":"685","endLine":102,"endColumn":17},{"ruleId":"687","severity":1,"message":"688","line":157,"column":8,"nodeType":"689","endLine":163,"endColumn":6,"suggestions":"693"},{"ruleId":"687","severity":1,"message":"691","line":158,"column":9,"nodeType":"692","endLine":158,"endColumn":67},{"ruleId":"687","severity":1,"message":"691","line":162,"column":9,"nodeType":"692","endLine":162,"endColumn":57},{"ruleId":"682","severity":1,"message":"694","line":18,"column":9,"nodeType":"684","messageId":"685","endLine":18,"endColumn":18},{"ruleId":"682","severity":1,"message":"695","line":107,"column":12,"nodeType":"684","messageId":"685","endLine":107,"endColumn":22},{"ruleId":"682","severity":1,"message":"686","line":115,"column":9,"nodeType":"684","messageId":"685","endLine":115,"endColumn":17},{"ruleId":"687","severity":1,"message":"696","line":181,"column":8,"nodeType":"689","endLine":181,"endColumn":10,"suggestions":"697"},{"ruleId":"687","severity":1,"message":"688","line":190,"column":8,"nodeType":"689","endLine":196,"endColumn":6,"suggestions":"698"},{"ruleId":"687","severity":1,"message":"691","line":191,"column":9,"nodeType":"692","endLine":191,"endColumn":67},{"ruleId":"687","severity":1,"message":"691","line":195,"column":9,"nodeType":"692","endLine":195,"endColumn":57},{"ruleId":"687","severity":1,"message":"699","line":73,"column":8,"nodeType":"689","endLine":73,"endColumn":10,"suggestions":"700"},{"ruleId":"687","severity":1,"message":"699","line":74,"column":8,"nodeType":"689","endLine":74,"endColumn":10,"suggestions":"701"},{"ruleId":"687","severity":1,"message":"702","line":89,"column":8,"nodeType":"689","endLine":89,"endColumn":10,"suggestions":"703"},{"ruleId":"704","severity":1,"message":"705","line":5,"column":19,"nodeType":"706","messageId":"707","endLine":5,"endColumn":40},{"ruleId":"704","severity":1,"message":"705","line":6,"column":18,"nodeType":"706","messageId":"707","endLine":6,"endColumn":38},{"ruleId":"704","severity":1,"message":"705","line":9,"column":14,"nodeType":"706","messageId":"707","endLine":9,"endColumn":63},{"ruleId":"704","severity":1,"message":"705","line":12,"column":14,"nodeType":"706","messageId":"707","endLine":12,"endColumn":52},{"ruleId":"676","replacedBy":"680"},{"ruleId":"678","replacedBy":"681"},{"ruleId":"687","severity":1,"message":"708","line":47,"column":8,"nodeType":"689","endLine":47,"endColumn":10,"suggestions":"709"},{"ruleId":"682","severity":1,"message":"710","line":8,"column":7,"nodeType":"684","messageId":"685","endLine":8,"endColumn":15},{"ruleId":"682","severity":1,"message":"686","line":112,"column":9,"nodeType":"684","messageId":"685","endLine":112,"endColumn":17},{"ruleId":"687","severity":1,"message":"688","line":130,"column":8,"nodeType":"689","endLine":135,"endColumn":6,"suggestions":"711"},{"ruleId":"687","severity":1,"message":"691","line":131,"column":9,"nodeType":"692","endLine":131,"endColumn":67},{"ruleId":"682","severity":1,"message":"712","line":10,"column":5,"nodeType":"684","messageId":"685","endLine":10,"endColumn":11},{"ruleId":"682","severity":1,"message":"713","line":108,"column":9,"nodeType":"684","messageId":"685","endLine":108,"endColumn":14},{"ruleId":"687","severity":1,"message":"714","line":210,"column":8,"nodeType":"689","endLine":210,"endColumn":10,"suggestions":"715"},{"ruleId":"716","severity":1,"message":"717","line":82,"column":15,"nodeType":"718","messageId":"719","endLine":82,"endColumn":17},{"ruleId":"716","severity":1,"message":"717","line":82,"column":45,"nodeType":"718","messageId":"719","endLine":82,"endColumn":47},{"ruleId":"687","severity":1,"message":"720","line":86,"column":6,"nodeType":"689","endLine":86,"endColumn":12,"suggestions":"721"},{"ruleId":"716","severity":1,"message":"717","line":90,"column":15,"nodeType":"718","messageId":"719","endLine":90,"endColumn":17},{"ruleId":"716","severity":1,"message":"717","line":90,"column":45,"nodeType":"718","messageId":"719","endLine":90,"endColumn":47},{"ruleId":"687","severity":1,"message":"722","line":115,"column":6,"nodeType":"689","endLine":115,"endColumn":45,"suggestions":"723"},{"ruleId":"687","severity":1,"message":"691","line":115,"column":7,"nodeType":"724","endLine":115,"endColumn":44},{"ruleId":"682","severity":1,"message":"725","line":2,"column":9,"nodeType":"684","messageId":"685","endLine":2,"endColumn":22},{"ruleId":"726","severity":1,"message":"727","line":99,"column":96,"nodeType":"728","messageId":"729","endLine":99,"endColumn":98},{"ruleId":"682","severity":1,"message":"730","line":4,"column":10,"nodeType":"684","messageId":"685","endLine":4,"endColumn":22},{"ruleId":"682","severity":1,"message":"731","line":6,"column":56,"nodeType":"684","messageId":"685","endLine":6,"endColumn":60},{"ruleId":"687","severity":1,"message":"732","line":14,"column":7,"nodeType":"689","endLine":14,"endColumn":20,"suggestions":"733"},{"ruleId":"687","severity":1,"message":"699","line":74,"column":8,"nodeType":"689","endLine":74,"endColumn":10,"suggestions":"734"},{"ruleId":"704","severity":1,"message":"705","line":5,"column":19,"nodeType":"706","messageId":"707","endLine":5,"endColumn":40},{"ruleId":"704","severity":1,"message":"705","line":6,"column":18,"nodeType":"706","messageId":"707","endLine":6,"endColumn":38},{"ruleId":"704","severity":1,"message":"705","line":9,"column":14,"nodeType":"706","messageId":"707","endLine":9,"endColumn":63},{"ruleId":"704","severity":1,"message":"705","line":12,"column":14,"nodeType":"706","messageId":"707","endLine":12,"endColumn":52},{"ruleId":"682","severity":1,"message":"686","line":102,"column":9,"nodeType":"684","messageId":"685","endLine":102,"endColumn":17},{"ruleId":"687","severity":1,"message":"688","line":157,"column":8,"nodeType":"689","endLine":163,"endColumn":6,"suggestions":"735"},{"ruleId":"687","severity":1,"message":"691","line":158,"column":9,"nodeType":"692","endLine":158,"endColumn":67},{"ruleId":"687","severity":1,"message":"691","line":162,"column":9,"nodeType":"692","endLine":162,"endColumn":57},{"ruleId":"687","severity":1,"message":"708","line":47,"column":8,"nodeType":"689","endLine":47,"endColumn":10,"suggestions":"736"},{"ruleId":"682","severity":1,"message":"737","line":2,"column":21,"nodeType":"684","messageId":"685","endLine":2,"endColumn":31},{"ruleId":"682","severity":1,"message":"738","line":6,"column":10,"nodeType":"684","messageId":"685","endLine":6,"endColumn":17},{"ruleId":"682","severity":1,"message":"739","line":6,"column":19,"nodeType":"684","messageId":"685","endLine":6,"endColumn":27},{"ruleId":"682","severity":1,"message":"683","line":10,"column":40,"nodeType":"684","messageId":"685","endLine":10,"endColumn":45},{"ruleId":"682","severity":1,"message":"740","line":14,"column":8,"nodeType":"684","messageId":"685","endLine":14,"endColumn":15},{"ruleId":"682","severity":1,"message":"741","line":14,"column":19,"nodeType":"684","messageId":"685","endLine":14,"endColumn":32},{"ruleId":"682","severity":1,"message":"742","line":14,"column":34,"nodeType":"684","messageId":"685","endLine":14,"endColumn":42},{"ruleId":"682","severity":1,"message":"686","line":107,"column":9,"nodeType":"684","messageId":"685","endLine":107,"endColumn":17},{"ruleId":"687","severity":1,"message":"688","line":125,"column":8,"nodeType":"689","endLine":130,"endColumn":6,"suggestions":"743"},{"ruleId":"687","severity":1,"message":"691","line":126,"column":9,"nodeType":"692","endLine":126,"endColumn":67},{"ruleId":"682","severity":1,"message":"694","line":18,"column":9,"nodeType":"684","messageId":"685","endLine":18,"endColumn":18},{"ruleId":"682","severity":1,"message":"695","line":107,"column":12,"nodeType":"684","messageId":"685","endLine":107,"endColumn":22},{"ruleId":"682","severity":1,"message":"686","line":115,"column":9,"nodeType":"684","messageId":"685","endLine":115,"endColumn":17},{"ruleId":"687","severity":1,"message":"696","line":181,"column":8,"nodeType":"689","endLine":181,"endColumn":10,"suggestions":"744"},{"ruleId":"687","severity":1,"message":"688","line":190,"column":8,"nodeType":"689","endLine":196,"endColumn":6,"suggestions":"745"},{"ruleId":"687","severity":1,"message":"691","line":191,"column":9,"nodeType":"692","endLine":191,"endColumn":67},{"ruleId":"687","severity":1,"message":"691","line":195,"column":9,"nodeType":"692","endLine":195,"endColumn":57},{"ruleId":"682","severity":1,"message":"737","line":2,"column":20,"nodeType":"684","messageId":"685","endLine":2,"endColumn":30},{"ruleId":"682","severity":1,"message":"683","line":10,"column":39,"nodeType":"684","messageId":"685","endLine":10,"endColumn":44},{"ruleId":"682","severity":1,"message":"740","line":14,"column":8,"nodeType":"684","messageId":"685","endLine":14,"endColumn":15},{"ruleId":"682","severity":1,"message":"741","line":14,"column":18,"nodeType":"684","messageId":"685","endLine":14,"endColumn":31},{"ruleId":"682","severity":1,"message":"742","line":14,"column":33,"nodeType":"684","messageId":"685","endLine":14,"endColumn":41},{"ruleId":"682","severity":1,"message":"686","line":98,"column":9,"nodeType":"684","messageId":"685","endLine":98,"endColumn":17},{"ruleId":"687","severity":1,"message":"688","line":116,"column":8,"nodeType":"689","endLine":121,"endColumn":6,"suggestions":"746"},{"ruleId":"687","severity":1,"message":"691","line":117,"column":9,"nodeType":"692","endLine":117,"endColumn":67},{"ruleId":"687","severity":1,"message":"699","line":73,"column":8,"nodeType":"689","endLine":73,"endColumn":10,"suggestions":"747"},{"ruleId":"687","severity":1,"message":"702","line":89,"column":8,"nodeType":"689","endLine":89,"endColumn":10,"suggestions":"748"},{"ruleId":"682","severity":1,"message":"712","line":10,"column":5,"nodeType":"684","messageId":"685","endLine":10,"endColumn":11},{"ruleId":"682","severity":1,"message":"713","line":107,"column":9,"nodeType":"684","messageId":"685","endLine":107,"endColumn":14},{"ruleId":"687","severity":1,"message":"714","line":197,"column":8,"nodeType":"689","endLine":197,"endColumn":10,"suggestions":"749"},{"ruleId":"687","severity":1,"message":"732","line":14,"column":7,"nodeType":"689","endLine":14,"endColumn":20,"suggestions":"750"},{"ruleId":"682","severity":1,"message":"725","line":2,"column":9,"nodeType":"684","messageId":"685","endLine":2,"endColumn":22},{"ruleId":"726","severity":1,"message":"727","line":99,"column":96,"nodeType":"728","messageId":"729","endLine":99,"endColumn":98},{"ruleId":"682","severity":1,"message":"730","line":4,"column":10,"nodeType":"684","messageId":"685","endLine":4,"endColumn":22},{"ruleId":"682","severity":1,"message":"731","line":6,"column":56,"nodeType":"684","messageId":"685","endLine":6,"endColumn":60},{"ruleId":"716","severity":1,"message":"717","line":82,"column":15,"nodeType":"718","messageId":"719","endLine":82,"endColumn":17},{"ruleId":"716","severity":1,"message":"717","line":82,"column":45,"nodeType":"718","messageId":"719","endLine":82,"endColumn":47},{"ruleId":"687","severity":1,"message":"720","line":86,"column":6,"nodeType":"689","endLine":86,"endColumn":12,"suggestions":"751"},{"ruleId":"716","severity":1,"message":"717","line":90,"column":15,"nodeType":"718","messageId":"719","endLine":90,"endColumn":17},{"ruleId":"716","severity":1,"message":"717","line":90,"column":45,"nodeType":"718","messageId":"719","endLine":90,"endColumn":47},{"ruleId":"687","severity":1,"message":"722","line":115,"column":6,"nodeType":"689","endLine":115,"endColumn":45,"suggestions":"752"},{"ruleId":"687","severity":1,"message":"691","line":115,"column":7,"nodeType":"724","endLine":115,"endColumn":44},{"ruleId":"687","severity":1,"message":"753","line":52,"column":9,"nodeType":"706","endLine":52,"endColumn":13},"no-native-reassign",["754"],"no-negated-in-lhs",["755"],["754"],["755"],"@typescript-eslint/no-unused-vars","'Theme' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterManager' and 'getData'. Either include them or remove the dependency array.","ArrayExpression",["756"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["757"],"'cloneDeep' is defined but never used.","'categories' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'columnCategories.options' and 'snackbar'. Either include them or remove the dependency array.",["758"],["759"],"React Hook useEffect has missing dependencies: 'id', 'reset', and 'snackBar'. Either include them or remove the dependency array.",["760"],["761"],"React Hook useEffect has missing dependencies: 'id', 'reset', and 'snackbar'. Either include them or remove the dependency array.",["762"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","React Hook useEffect has a missing dependency: 'filterManager'. Either include it or remove the dependency array.",["763"],"'PageList' is assigned a value but never used.",["764"],"'Button' is defined but never used.","'reset' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'snackbar'. Either include them or remove the dependency array.",["765"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'debouncedSearchText' and 'freeSolo'. Either include them or remove the dependency array.",["766"],"React Hook useEffect has missing dependencies: 'debouncedSearchText', 'freeSolo', 'open', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["767"],"ConditionalExpression","'RefAttributes' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createStyles' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'errors' and 'snackbar'. Either include them or remove the dependency array.",["768"],["769"],["770"],["771"],"'useReducer' is defined but never used.","'BadgeNo' is defined but never used.","'BadgeYes' is defined but never used.","'reducer' is defined but never used.","'INITIAL_STATE' is defined but never used.","'Creators' is defined but never used.",["772"],["773"],["774"],["775"],["776"],["777"],["778"],["779"],["780"],["781"],"The true literal is not a valid dependency because it never changes. You can safely remove it.","no-global-assign","no-unsafe-negation",{"desc":"782","fix":"783"},{"desc":"782","fix":"784"},{"desc":"785","fix":"786"},{"desc":"782","fix":"787"},{"desc":"788","fix":"789"},{"desc":"788","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"782","fix":"795"},{"desc":"796","fix":"797"},{"desc":"798","fix":"799"},{"desc":"800","fix":"801"},{"desc":"802","fix":"803"},{"desc":"788","fix":"804"},{"desc":"782","fix":"805"},{"desc":"793","fix":"806"},{"desc":"782","fix":"807"},{"desc":"785","fix":"808"},{"desc":"782","fix":"809"},{"desc":"782","fix":"810"},{"desc":"788","fix":"811"},{"desc":"791","fix":"812"},{"desc":"796","fix":"813"},{"desc":"802","fix":"814"},{"desc":"798","fix":"815"},{"desc":"800","fix":"816"},"Update the dependencies array to be: [debouncedFilterState.pagination.page, debouncedFilterState.pagination.per_page, debouncedFilterState.order, filterManager, getData]",{"range":"817","text":"818"},{"range":"819","text":"818"},"Update the dependencies array to be: [columnCategories.options, snackbar]",{"range":"820","text":"821"},{"range":"822","text":"818"},"Update the dependencies array to be: [id, reset, snackBar]",{"range":"823","text":"824"},{"range":"825","text":"824"},"Update the dependencies array to be: [id, reset, snackbar]",{"range":"826","text":"827"},"Update the dependencies array to be: [filterManager]",{"range":"828","text":"829"},{"range":"830","text":"818"},"Update the dependencies array to be: [id, snackbar]",{"range":"831","text":"832"},"Update the dependencies array to be: [debouncedSearchText, freeSolo, open]",{"range":"833","text":"834"},"Update the dependencies array to be: [debouncedSearchText, freeSolo, open, props]",{"range":"835","text":"836"},"Update the dependencies array to be: [errors, snackbar, submitCount]",{"range":"837","text":"838"},{"range":"839","text":"824"},{"range":"840","text":"818"},{"range":"841","text":"829"},{"range":"842","text":"818"},{"range":"843","text":"821"},{"range":"844","text":"818"},{"range":"845","text":"818"},{"range":"846","text":"824"},{"range":"847","text":"827"},{"range":"848","text":"832"},{"range":"849","text":"838"},{"range":"850","text":"834"},{"range":"851","text":"836"},[3332,3538],"[debouncedFilterState.pagination.page, debouncedFilterState.pagination.per_page, debouncedFilterState.order, filterManager, getData]",[4851,5115],[5810,5812],"[columnCategories.options, snackbar]",[6009,6273],[2012,2014],"[id, reset, snackBar]",[2077,2079],[2765,2767],"[id, reset, snackbar]",[1781,1783],"[filterManager]",[3688,3894],[5780,5782],"[id, snackbar]",[2486,2492],"[debouncedSearchText, freeSolo, open]",[2941,2980],"[debouncedSearchText, freeSolo, open, props]",[434,447],"[errors, snackbar, submitCount]",[2077,2079],[4851,5115],[1781,1783],[3602,3808],[5810,5812],[6009,6273],[3342,3548],[2022,2024],[2765,2767],[5345,5347],[434,447],[2486,2492],[2941,2980]]