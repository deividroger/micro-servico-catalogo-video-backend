[{"/var/www/frontend/src/index.tsx":"1","/var/www/frontend/src/reportWebVitals.ts":"2","/var/www/frontend/src/App.tsx":"3","/var/www/frontend/src/components/Navbar/index.tsx":"4","/code-micro-videos/frontend/src/index.tsx":"5","/code-micro-videos/frontend/src/reportWebVitals.ts":"6","/code-micro-videos/frontend/src/App.tsx":"7","/code-micro-videos/frontend/src/components/Navbar/index.tsx":"8","/code-micro-videos/frontend/src/components/Navbar/Menu.tsx":"9","/code-micro-videos/frontend/src/components/Page.tsx":"10","/code-micro-videos/frontend/src/routes/AppRouter.tsx":"11","/code-micro-videos/frontend/src/routes/index.tsx":"12","/code-micro-videos/frontend/src/pages/Dashboard.tsx":"13","/code-micro-videos/frontend/src/components/Breadcrumbs.tsx":"14","/code-micro-videos/frontend/src/pages/category/PageList.tsx":"15","/code-micro-videos/frontend/src/pages/category/Table.tsx":"16","/code-micro-videos/frontend/src/util/http/index.ts":"17","/code-micro-videos/frontend/src/pages/cast-member/PageList.tsx":"18","/code-micro-videos/frontend/src/pages/cast-member/Table.tsx":"19","/code-micro-videos/frontend/src/pages/genre/PageList.tsx":"20","/code-micro-videos/frontend/src/pages/genre/Table.tsx":"21","/code-micro-videos/frontend/src/util/http/category-http.ts":"22","/code-micro-videos/frontend/src/util/http/http-resource.ts":"23","/code-micro-videos/frontend/src/pages/category/PageForm.tsx":"24","/code-micro-videos/frontend/src/pages/category/Form.tsx":"25","/code-micro-videos/frontend/src/pages/cast-member/PageForm.tsx":"26","/code-micro-videos/frontend/src/pages/cast-member/Form.tsx":"27","/code-micro-videos/frontend/src/util/http/cast-member-http.ts":"28","/code-micro-videos/frontend/src/routes/categoryRoutes.tsx":"29","/code-micro-videos/frontend/src/routes/genresRoutes.tsx":"30","/code-micro-videos/frontend/src/routes/castMembersRoutes.tsx":"31","/code-micro-videos/frontend/src/routes/dashboardRoutes.tsx":"32","/code-micro-videos/frontend/src/pages/genre/PageForm.tsx":"33","/code-micro-videos/frontend/src/pages/genre/Form.tsx":"34","/code-micro-videos/frontend/src/util/http/genre-http.ts":"35","/code-micro-videos/frontend/src/theme.ts":"36","/code-micro-videos/frontend/src/components/Badge.tsx":"37","/code-micro-videos/frontend/src/util/vendor/yup.ts":"38","/code-micro-videos/frontend/src/components/SnackbarProvider.tsx":"39","/code-micro-videos/frontend/src/util/models.ts":"40","/code-micro-videos/frontend/src/components/SubmmitActions.tsx":"41","/code-micro-videos/frontend/src/components/DefaultForm.tsx":"42","/code-micro-videos/frontend/src/components/Table/index.tsx":"43","/code-micro-videos/frontend/src/components/Table/FilterResetButton.tsx":"44","/code-micro-videos/frontend/src/components/Table/DebouncedTableSearch.js":"45","/code-micro-videos/frontend/src/store/search/index.ts":"46"},{"size":500,"mtime":1611865961266,"results":"47","hashOfConfig":"48"},{"size":425,"mtime":1611865961266,"results":"49","hashOfConfig":"48"},{"size":258,"mtime":1611889797040,"results":"50","hashOfConfig":"48"},{"size":245,"mtime":1611889895724,"results":"51","hashOfConfig":"48"},{"size":500,"mtime":1611865961266,"results":"52","hashOfConfig":"53"},{"size":425,"mtime":1611865961266,"results":"54","hashOfConfig":"53"},{"size":835,"mtime":1618081186416,"results":"55","hashOfConfig":"53"},{"size":941,"mtime":1611971943655,"results":"56","hashOfConfig":"53"},{"size":2269,"mtime":1614888760297,"results":"57","hashOfConfig":"53"},{"size":616,"mtime":1612319500111,"results":"58","hashOfConfig":"53"},{"size":614,"mtime":1612026293655,"results":"59","hashOfConfig":"53"},{"size":519,"mtime":1613523274354,"results":"60","hashOfConfig":"53"},{"size":282,"mtime":1612023918713,"results":"61","hashOfConfig":"53"},{"size":2461,"mtime":1614898469175,"results":"62","hashOfConfig":"53"},{"size":739,"mtime":1614890359578,"results":"63","hashOfConfig":"53"},{"size":6241,"mtime":1622851562927,"results":"64","hashOfConfig":"53"},{"size":127,"mtime":1613004423539,"results":"65","hashOfConfig":"53"},{"size":745,"mtime":1614890370970,"results":"66","hashOfConfig":"53"},{"size":3501,"mtime":1621826672187,"results":"67","hashOfConfig":"53"},{"size":728,"mtime":1614890341345,"results":"68","hashOfConfig":"53"},{"size":3441,"mtime":1621642391390,"results":"69","hashOfConfig":"53"},{"size":171,"mtime":1613175348081,"results":"70","hashOfConfig":"53"},{"size":1265,"mtime":1621857965878,"results":"71","hashOfConfig":"53"},{"size":367,"mtime":1617422438367,"results":"72","hashOfConfig":"53"},{"size":4637,"mtime":1618370078406,"results":"73","hashOfConfig":"53"},{"size":263,"mtime":1613521279483,"results":"74","hashOfConfig":"53"},{"size":4685,"mtime":1618370259849,"results":"75","hashOfConfig":"53"},{"size":177,"mtime":1613519013264,"results":"76","hashOfConfig":"53"},{"size":706,"mtime":1617418804994,"results":"77","hashOfConfig":"53"},{"size":641,"mtime":1618081782531,"results":"78","hashOfConfig":"53"},{"size":755,"mtime":1618081698996,"results":"79","hashOfConfig":"53"},{"size":217,"mtime":1613523159029,"results":"80","hashOfConfig":"53"},{"size":254,"mtime":1618089339600,"results":"81","hashOfConfig":"53"},{"size":5516,"mtime":1621568579259,"results":"82","hashOfConfig":"53"},{"size":161,"mtime":1614588701181,"results":"83","hashOfConfig":"53"},{"size":3025,"mtime":1614898645434,"results":"84","hashOfConfig":"53"},{"size":637,"mtime":1614898053376,"results":"85","hashOfConfig":"53"},{"size":318,"mtime":1617403379579,"results":"86","hashOfConfig":"53"},{"size":1495,"mtime":1618080945733,"results":"87","hashOfConfig":"53"},{"size":907,"mtime":1618345524837,"results":"88","hashOfConfig":"53"},{"size":1037,"mtime":1618349567645,"results":"89","hashOfConfig":"53"},{"size":875,"mtime":1618370285382,"results":"90","hashOfConfig":"53"},{"size":4251,"mtime":1622082326296,"results":"91","hashOfConfig":"53"},{"size":676,"mtime":1621993575786,"results":"92","hashOfConfig":"53"},{"size":3678,"mtime":1622852068833,"results":"93","hashOfConfig":"53"},{"size":2333,"mtime":1622851576171,"results":"94","hashOfConfig":"53"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"1dpw0hl",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1qzgm0n",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/frontend/src/index.tsx",[],["196","197"],"/var/www/frontend/src/reportWebVitals.ts",[],"/var/www/frontend/src/App.tsx",[],"/var/www/frontend/src/components/Navbar/index.tsx",[],"/code-micro-videos/frontend/src/index.tsx",[],["198","199"],"/code-micro-videos/frontend/src/reportWebVitals.ts",[],"/code-micro-videos/frontend/src/App.tsx",[],"/code-micro-videos/frontend/src/components/Navbar/index.tsx",[],"/code-micro-videos/frontend/src/components/Navbar/Menu.tsx",[],"/code-micro-videos/frontend/src/components/Page.tsx",[],"/code-micro-videos/frontend/src/routes/AppRouter.tsx",[],"/code-micro-videos/frontend/src/routes/index.tsx",[],"/code-micro-videos/frontend/src/pages/Dashboard.tsx",[],"/code-micro-videos/frontend/src/components/Breadcrumbs.tsx",[],"/code-micro-videos/frontend/src/pages/category/PageList.tsx",[],"/code-micro-videos/frontend/src/pages/category/Table.tsx",["200"],"/code-micro-videos/frontend/src/util/http/index.ts",[],"/code-micro-videos/frontend/src/pages/cast-member/PageList.tsx",[],"/code-micro-videos/frontend/src/pages/cast-member/Table.tsx",["201"],"\nimport React, { useState, useEffect } from 'react';\nimport castMemberHttp from '../../util/http/cast-member-http'\nimport format from 'date-fns/format';\nimport parseIso from 'date-fns/parseISO';\nimport { BadgeYes, BadgeNo } from '../../components/Badge';\nimport { CastMember, ListResponse } from '../../util/models';\n\nimport { useSnackbar } from 'notistack';\n\nimport { MUIDataTableMeta } from 'mui-datatables';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { IconButton, MuiThemeProvider } from '@material-ui/core';\nimport DefaultTable, { makeActionStyles, TableColumn } from '../../components/Table';\nimport { Link } from 'react-router-dom';\n\nconst CastMemberTypeMap = {\n    1: 'Diretor',\n    2: 'Ator'\n};\n\nconst columnsDefinition: TableColumn[] = [\n    {\n        name: 'id',\n        label: 'ID',\n        width: '30%',\n        options: {\n            sort: false,\n        }\n    },\n    {\n        name: 'name',\n        label: 'Nome',\n    },\n    {\n        name: 'type',\n        label: 'Tipo',\n        options: {\n            customBodyRender(value, tableMeta, updateValue) {\n                return CastMemberTypeMap[value];\n            }\n        }\n    },\n    {\n        name: 'is_active',\n        label: 'Ativo?',\n        options: {\n            customBodyRender(value, tableMeta, updateValue) {\n                return value ? <BadgeYes /> : <BadgeNo />\n            }\n        }\n    },\n    {\n        name: 'created_at',\n        label: 'Criado em',\n        options: {\n            customBodyRender(value, tableMeta, updateValue) {\n                return <span> {format(parseIso(value), 'dd/MM/yyyy')} </span>\n            }\n        }\n    },\n    {\n        name: 'actions',\n        label: 'Ações',\n        width: '13%',\n        options: {\n            sort: false,\n            customBodyRender: (value, tableMeta: MUIDataTableMeta) => {\n                return (\n                    <IconButton\n                        color={'secondary'}\n                        component={Link}\n                        to={`/cast-members/${tableMeta.rowData[0]}/edit`}\n                    >\n                        <EditIcon fontSize={'inherit'} />\n                    </IconButton>\n                )\n            }\n        }\n    }\n];\n\nconst Table = () => {\n\n    const [data, setData] = useState < CastMember[] > ([]);\n    const [loading, setLoading] = useState < boolean > (false);\n\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        (async () => {\n            setLoading(true);\n\n            try {\n                if (isSubscribed) {\n                    const { data } = await castMemberHttp.list < ListResponse < CastMember >> ();\n                    setData(data.data);\n                }\n            } catch (error) {\n                console.error(error);\n                snackBar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                    variant: 'error'\n                });\n            } finally {\n                setLoading(false);\n            }\n\n        })();\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n    return (\n        <MuiThemeProvider theme={makeActionStyles(columnsDefinition.length - 1)}>\n\n            <DefaultTable\n                title=''\n                columns={columnsDefinition}\n                data={data}\n                loading={loading}\n                options={{ responsive: \"scrollFullHeight\" }}\n            />\n\n        </MuiThemeProvider>\n\n\n    );\n};\nexport default Table;","/code-micro-videos/frontend/src/pages/genre/PageList.tsx",[],"/code-micro-videos/frontend/src/pages/genre/Table.tsx",["202"],"\nimport React, { useState, useEffect } from 'react';\nimport format from 'date-fns/format';\nimport parseIso from 'date-fns/parseISO';\nimport genreHttp from '../../util/http/genre-http';\nimport { BadgeYes, BadgeNo } from '../../components/Badge';\n\nimport { Genre, ListResponse } from '../../util/models';\n\nimport { MUIDataTableMeta } from 'mui-datatables';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DefaultTable, { makeActionStyles, TableColumn } from '../../components/Table';\nimport { IconButton, MuiThemeProvider } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport { useSnackbar } from 'notistack';\n\nconst columnsDefinition: TableColumn[] = [\n    {\n        name: 'id',\n        label: 'ID',\n        width: '30%',\n        options: {\n            sort: false,\n        }\n    },\n    {\n        name: 'name',\n        label: 'Nome',\n    },\n    {\n        name: 'categories',\n        label: 'Categorias',\n        options: {\n            customBodyRender(value, tableMeta, updateValue) {\n\n                return value.map(value => value.name).join(', ');\n            }\n        }\n    },\n    {\n        name: 'is_active',\n        label: 'Ativo?',\n        options: {\n            customBodyRender(value, tableMeta, updateValue) {\n                return value ? <BadgeYes /> : <BadgeNo />\n            }\n        }\n    },\n    {\n        name: 'created_at',\n        label: 'Criado em',\n        options: {\n            customBodyRender(value, tableMeta, updateValue) {\n                return <span> {format(parseIso(value), 'dd/MM/yyyy')} </span>\n            }\n        }\n    },\n    {\n        name: 'actions',\n        label: 'Ações',\n        width: '13%',\n        options: {\n            sort: false,\n            customBodyRender: (value, tableMeta: MUIDataTableMeta) => {\n                return (\n                    <IconButton\n                        color={'secondary'}\n                        component={Link}\n                        to={`/genres/${tableMeta.rowData[0]}/edit`}\n                    >\n                        <EditIcon fontSize={'inherit'} />\n                    </IconButton>\n                )\n            }\n        }\n    }\n];\n\n\nconst Table = () => {\n\n    const [data, setData] = useState < Genre[] | null > ([]);\n    const [loading, setLoading] = useState < boolean > (false);\n\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        (async () => {\n            setLoading(true);\n            try {\n                if (isSubscribed) {\n\n                    const { data } = await genreHttp.list < ListResponse < Genre >> ();\n                    setData(data.data);\n                }\n\n            } catch (error) {\n                console.error(error);\n                snackBar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                    variant: 'error'\n                });\n            } finally {\n                setLoading(false);\n            }\n\n        })();\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n    return (\n        <MuiThemeProvider theme={makeActionStyles(columnsDefinition.length - 1)}>\n\n            <DefaultTable\n                title=''\n                columns={columnsDefinition}\n                data={data}\n                loading={loading}\n                options={{ responsive: \"scrollFullHeight\" }}\n            />\n\n        </MuiThemeProvider>\n\n\n    );\n};\nexport default Table;","/code-micro-videos/frontend/src/util/http/category-http.ts",[],"/code-micro-videos/frontend/src/util/http/http-resource.ts",[],"/code-micro-videos/frontend/src/pages/category/PageForm.tsx",[],"/code-micro-videos/frontend/src/pages/category/Form.tsx",["203"],"import * as React from 'react'\nimport { useEffect, useState } from 'react'\nimport { TextField, Checkbox, FormControlLabel } from '@material-ui/core'\n\nimport useForm from 'react-hook-form';\nimport categoryHttp from '../../util/http/category-http';\nimport * as yup from '../../util/vendor/yup'\nimport { useHistory, useParams } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport { Category } from '../../util/models';\nimport SubmmitActions from '../../components/SubmmitActions';\nimport { DefaultForm } from '../../components/DefaultForm'\n\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string()\n        .label(\"Nome\")\n        .required()\n        .max(255)\n\n});\n\nexport const Form = () => {\n\n    const { register, handleSubmit, getValues, setValue, errors, reset, watch, triggerValidation } = useForm({\n\n        validationSchema: validationSchema,\n        defaultValues: {\n            is_active: true\n        }\n    });\n\n    const snackBar = useSnackbar();\n    const { id }: any = useParams();\n    const history = useHistory();\n    const [category, setCategory] = useState < Category | null > (null);\n    const [loading, setLoding] = useState < boolean > (false);\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        if (!id) {\n            return;\n        };\n\n        if (isSubscribed) {\n\n            (async () => {\n                setLoding(true);\n                try {\n                    const { data } = await categoryHttp.get(id);\n                    setCategory(data.data)\n                    reset(data.data);\n                } catch (error) {\n                    console.error(error);\n                    snackBar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                        variant: 'error'\n                    });\n                } finally {\n                    setLoding(false);\n                }\n            })();\n        }\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n\n    useEffect(() => {\n        register({ name: 'is_active' })\n\n    }, [register])\n\n    async function onSubmit(formData, event) {\n\n        setLoding(true);\n\n        try {\n            const http = !category\n                ? categoryHttp.create(formData)\n                : categoryHttp.update(category.id, formData);\n\n            const { data } = await http;\n            snackBar.enqueueSnackbar(\"Categoria salva com sucesso\", {\n                variant: 'success'\n            });\n\n            setTimeout(() => {\n\n                event ? (\n                    id ?\n                        history.replace(`/categories/${data.data.id}/edit`)\n                        :\n                        history.push(`/categories/${data.data.id}/edit`)\n                ) : history.push('/categories')\n            });\n\n        } catch (error) {\n            console.error(error);\n            snackBar.enqueueSnackbar(\"Não foi possível salvar a categoria\", {\n                variant: 'error'\n            });\n        } finally {\n            setLoding(false);\n        }\n    }\n\n    return (\n\n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name?.message}\n                InputLabelProps={{ shrink: true }}\n\n            />\n\n            <TextField\n                inputRef={register}\n                disabled={loading}\n                name=\"description\"\n                label=\"Descrição\"\n                multiline\n                rows=\"4\"\n                fullWidth\n                variant={\"outlined\"}\n                margin={\"normal\"}\n                InputLabelProps={{ shrink: true }}\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        color={\"primary\"}\n                        name=\"is_active\"\n                        onChange={\n                            () => setValue('is_active', !getValues()['is_active'])\n                        }\n                        checked={watch('is_active') as boolean}\n                    />\n                }\n                label={\"Ativo?\"}\n                labelPlacement={'end'}\n                disabled={loading}\n            />\n\n            <SubmmitActions disabledButtons={loading} handleSave={() => triggerValidation().then(isvalid => { isvalid && onSubmit(getValues(), null) })} />\n\n        </DefaultForm>\n    );\n};\n\n","/code-micro-videos/frontend/src/pages/cast-member/PageForm.tsx",[],"/code-micro-videos/frontend/src/pages/cast-member/Form.tsx",["204"],"import * as React from 'react';\nimport useForm from 'react-hook-form';\nimport castMemberHttp from '../../util/http/cast-member-http';\nimport { useEffect, useState } from 'react'\nimport { FormControl, FormLabel, Radio, TextField, RadioGroup, FormControlLabel, FormHelperText } from '@material-ui/core';\nimport * as yup from '../../util/vendor/yup'\nimport { useHistory, useParams } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport { CastMember } from '../../util/models';\nimport SubmmitActions from '../../components/SubmmitActions';\nimport { DefaultForm } from '../../components/DefaultForm'\n\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string()\n        .label(\"Nome\")\n        .required()\n        .max(255),\n    type: yup\n        .number()\n        .label(\"Tipo\")\n        .required(),\n\n});\n\nexport const Form = () => {\n\n    const { register, handleSubmit, getValues, setValue, errors, reset, watch, triggerValidation } = useForm({\n\n        validationSchema: validationSchema,\n\n    });\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { id }: any = useParams();\n    const [castMember, setCastMember] = useState < CastMember | null > (null);\n    const [loading, setLoading] = useState < boolean > (false);\n\n\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        if (!id) {\n            return;\n        }\n\n        if (isSubscribed) {\n\n            (async () => {\n                setLoading(true);\n                try {\n                    const { data } = await castMemberHttp.get(id);\n                    setCastMember(data.data);\n                    reset(data.data);\n                } catch (error) {\n                    console.error(error);\n                    snackBar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                        variant: \"error\"\n                    });\n                } finally {\n                    setLoading(false);\n                }\n            })();\n        }\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n    useEffect(() => {\n        register({ name: \"type\" })\n\n    }, [register]);\n\n    async function onSubmit(formData, event) {\n\n        setLoading(true);\n\n        try {\n            const http = !castMember\n                ? castMemberHttp.create(formData)\n                : castMemberHttp.update(castMember.id, formData);\n            const { data } = await http;\n\n            snackBar.enqueueSnackbar(\"Membro de elenco salvo com sucesso\", {\n                variant: \"success\"\n            });\n\n            setTimeout(() => {\n\n                event ? (\n                    id ?\n                        history.replace(`/cast-members/${data.data.id}/edit`)\n                        :\n                        history.push(`/cast-members/${data.data.id}/edit`)\n                ) : history.push('/cast-members')\n            });\n\n        } catch (error) {\n            console.error(error);\n            snackBar.enqueueSnackbar(\"Não foi possível salvar o membro de elenco\", {\n                variant: \"error\"\n            });\n        } finally {\n            setLoading(false);\n        }\n\n    }\n\n    return (\n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name.message}\n                InputLabelProps={{ shrink: true }}\n            />\n\n            <FormControl\n                margin={\"normal\"}\n                error={errors.type !== undefined}\n                disabled={loading}\n            >\n                <FormLabel component=\"legend\" >Tipo</FormLabel>\n                <RadioGroup\n                    name=\"type\"\n                    onChange={(e) => {\n                        setValue(\"type\", parseInt(e.target.value));\n                    }}\n                    value={watch('type') + \"\"}\n                >\n\n                    <FormControlLabel value=\"1\" control={<Radio />} label=\"Diretor\" />\n                    <FormControlLabel value=\"2\" control={<Radio />} label=\"Ator\" />\n                </RadioGroup>\n\n                {\n                    errors.type && <FormHelperText id=\"text-helper-text\"> {errors.type.message} </FormHelperText>\n\n                }\n\n            </FormControl>\n\n            <SubmmitActions disabledButtons={loading} handleSave={() => triggerValidation().then(isvalid => { isvalid && onSubmit(getValues(), null) })} />\n\n        </DefaultForm>\n    );\n\n}","/code-micro-videos/frontend/src/util/http/cast-member-http.ts",[],"/code-micro-videos/frontend/src/routes/categoryRoutes.tsx",[],"/code-micro-videos/frontend/src/routes/genresRoutes.tsx",[],"/code-micro-videos/frontend/src/routes/castMembersRoutes.tsx",[],"/code-micro-videos/frontend/src/routes/dashboardRoutes.tsx",[],"/code-micro-videos/frontend/src/pages/genre/PageForm.tsx",[],"/code-micro-videos/frontend/src/pages/genre/Form.tsx",["205"],"import * as React from 'react';\nimport { useState } from 'react'\nimport useForm from 'react-hook-form';\nimport { useEffect } from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport categoryHttp from '../../util/http/category-http';\nimport genreHttp from '../../util/http/genre-http';\nimport * as yup from '../../util/vendor/yup'\nimport { useHistory, useParams } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport { Category, Genre } from '../../util/models';\nimport SubmmitActions from '../../components/SubmmitActions';\nimport { DefaultForm } from '../../components/DefaultForm'\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string()\n        .label(\"Nome\")\n        .required()\n        .max(255),\n    categories_id: yup\n        .array()\n        .label(\"Categorias\")\n        .required(),\n\n});\n\nexport const Form = () => {\n\n    const { register, handleSubmit, getValues, setValue, watch, errors, reset, triggerValidation } = useForm({\n        validationSchema,\n        defaultValues: {\n            categories_id: [] as any\n        }\n    });\n\n\n    const snackbar = useSnackbar();\n    const history = useHistory();\n    const { id }: any = useParams();\n    const [genre, setGenre] = useState < Genre | null > (null);\n    const [categories, setCategories] = useState < Category[] > ([]);\n    const [loading, setLoading] = useState < boolean > (false);\n\n\n    useEffect(() => {\n\n        let isSubscribed = true;\n\n        if (isSubscribed) {\n\n            (async () => {\n                setLoading(true);\n                const promises = [categoryHttp.list({queryParams:{all: ''}})];\n                if (id) {\n                    promises.push(genreHttp.get(id));\n                }\n                try {\n                    const [categoriesResponse, genreResponse] = await Promise.all(promises);\n                    setCategories(categoriesResponse.data.data);\n\n                    if (id) {\n                        setGenre(genreResponse.data.data);\n                        const categories_id = genreResponse.data.data.categories.map(category => category.id)\n                        reset({\n                            ...genreResponse.data.data,\n                            categories_id\n                        });\n                    }\n\n                } catch (error) {\n                    console.error(error);\n                    snackbar.enqueueSnackbar(\"Não foi possível carregar as informações\", {\n                        variant: \"error\"\n                    })\n                } finally {\n                    setLoading(false);\n                }\n            })();\n        }\n\n        return () => {\n            isSubscribed = false;\n        };\n\n    }, []);\n\n\n    useEffect(() => {\n        register({ name: \"categories_id\" })\n\n    }, [register]);\n\n\n\n    async function onSubmit(formData, event) {\n\n        setLoading(true);\n\n        try {\n            const http = !genre\n                ? genreHttp.create(formData)\n                : genreHttp.update(genre.id, formData);\n\n            const { data } = await http;\n\n            snackbar.enqueueSnackbar(\"Gênero salvo com sucesso!\", {\n                variant: \"success\"\n            });\n\n            setTimeout(() => {\n\n                event ? (\n                    id ?\n                        history.replace(`/genres/${data.data.id}/edit`)\n                        :\n                        history.push(`/genres/${data.data.id}/edit`)\n                ) : history.push('/genres')\n            });\n\n        } catch (error) {\n            console.error(error);\n            snackbar.enqueueSnackbar(\"Não foi possível salvar o gênero\", {\n                variant: \"error\"\n            });\n\n        } finally {\n            setLoading(false);\n        }\n\n    }\n\n    return (\n        \n        <DefaultForm onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={\"outlined\"}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name.message}\n                InputLabelProps={{ shrink: true }}\n            />\n\n            <TextField\n                select\n                name=\"categories_id\"\n                value={watch('categories_id')}\n                label='Categorias'\n                margin={'normal'}\n                variant={'outlined'}\n                fullWidth\n                onChange={(e) => {\n                    setValue('categories_id', e.target.value);\n                }}\n\n                SelectProps={{ multiple: true }}\n                disabled={loading}\n                error={errors.categories_id !== undefined}\n                helperText={errors.categories_id && errors.categories_id.message}\n                InputLabelProps={{ shrink: true }}\n            >\n                <MenuItem value=\"\" disabled>\n                    <em>Selecione categorias</em>\n                </MenuItem>\n                {\n                    categories.map(\n                        (category, key) => (\n                            <MenuItem key={key} value={category.id} >{category.name}</MenuItem>\n                        )\n                    )\n                }\n\n            </TextField>\n\n            <SubmmitActions disabledButtons={loading} handleSave={() => triggerValidation().then(isvalid => { isvalid && onSubmit(getValues(), null) })} />\n\n        </DefaultForm>\n    );\n\n}","/code-micro-videos/frontend/src/util/http/genre-http.ts",[],"/code-micro-videos/frontend/src/theme.ts",[],"/code-micro-videos/frontend/src/components/Badge.tsx",[],"/code-micro-videos/frontend/src/util/vendor/yup.ts",["206","207","208"],"import { LocaleObject, setLocale } from \"yup\";\n\nconst ptBR: LocaleObject = {\n  mixed: {\n    required: \"${path} é requerido\",\n  },\n  string: {\n    max: \"${path} precisa ter no máximo ${max} caracteres\",\n  },\n  number: {\n    min: \"${path} precisa ser no mínimo ${min}\",\n  },\n};\n\n\nsetLocale(ptBR);\n\nexport * from 'yup'","/code-micro-videos/frontend/src/components/SnackbarProvider.tsx",[],"/code-micro-videos/frontend/src/util/models.ts",[],["209","210"],"/code-micro-videos/frontend/src/components/SubmmitActions.tsx",[],"/code-micro-videos/frontend/src/components/DefaultForm.tsx",[],"/code-micro-videos/frontend/src/components/Table/index.tsx",[],"/code-micro-videos/frontend/src/components/Table/FilterResetButton.tsx",[],"/code-micro-videos/frontend/src/components/Table/DebouncedTableSearch.js",["211"],"/code-micro-videos/frontend/src/store/search/index.ts",[],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"212","replacedBy":"216"},{"ruleId":"214","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":98,"column":8,"nodeType":"220","endLine":103,"endColumn":6,"suggestions":"221"},{"ruleId":"218","severity":1,"message":"222","line":117,"column":8,"nodeType":"220","endLine":117,"endColumn":10,"suggestions":"223"},{"ruleId":"218","severity":1,"message":"222","line":116,"column":8,"nodeType":"220","endLine":116,"endColumn":10,"suggestions":"224"},{"ruleId":"218","severity":1,"message":"225","line":71,"column":8,"nodeType":"220","endLine":71,"endColumn":10,"suggestions":"226"},{"ruleId":"218","severity":1,"message":"225","line":74,"column":8,"nodeType":"220","endLine":74,"endColumn":10,"suggestions":"227"},{"ruleId":"218","severity":1,"message":"228","line":86,"column":8,"nodeType":"220","endLine":86,"endColumn":10,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":5,"column":15,"nodeType":"232","messageId":"233","endLine":5,"endColumn":36},{"ruleId":"230","severity":1,"message":"231","line":8,"column":10,"nodeType":"232","messageId":"233","endLine":8,"endColumn":59},{"ruleId":"230","severity":1,"message":"231","line":11,"column":10,"nodeType":"232","messageId":"233","endLine":11,"endColumn":48},{"ruleId":"212","replacedBy":"234"},{"ruleId":"214","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":99,"column":43,"nodeType":"238","messageId":"239","endLine":99,"endColumn":53},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],["240"],["241"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["242"],"React Hook useEffect has a missing dependency: 'snackBar'. Either include it or remove the dependency array.",["243"],["244"],"React Hook useEffect has missing dependencies: 'id', 'reset', and 'snackBar'. Either include them or remove the dependency array.",["245"],["246"],"React Hook useEffect has missing dependencies: 'id', 'reset', and 'snackbar'. Either include them or remove the dependency array.",["247"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["240"],["241"],"no-unused-vars","'searchText' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"250","fix":"252"},{"desc":"253","fix":"254"},{"desc":"253","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [searchState.search, searchState.pagination.page, searchState.pagination.per_page, searchState.order, getData]",{"range":"258","text":"259"},"Update the dependencies array to be: [snackBar]",{"range":"260","text":"261"},{"range":"262","text":"261"},"Update the dependencies array to be: [id, reset, snackBar]",{"range":"263","text":"264"},{"range":"265","text":"264"},"Update the dependencies array to be: [id, reset, snackbar]",{"range":"266","text":"267"},[2691,2830],"[searchState.search, searchState.pagination.page, searchState.pagination.per_page, searchState.order, getData]",[3098,3100],"[snackBar]",[3038,3040],[1988,1990],"[id, reset, snackBar]",[2075,2077],[2718,2720],"[id, reset, snackbar]"]